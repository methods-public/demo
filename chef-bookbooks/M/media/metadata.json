{
  "name": "media",
  "description": "Installs/Configures media",
  "long_description": "# Media Chef Cookbook\n[![Build Status](https://travis-ci.org/arangamani-cookbooks/media.png?branch=master)](https://travis-ci.org/arangamani-cookbooks/media)\n\n\nThis cookbook will setup the media devices on a server which will ideally act\nas a file/media server. Initially it will be used to mount external devices and\nadd then as NFS shares.\n\n# Requirements\nThis cookbook requires devices to be preformatted to a file system. It will not\nformat the devices. It will simply mount the specified devices for using as a\nfile/media server.\n\nFor cookbook dependencies/requirements see `metadata.rb`.\n\n# Usage\n\n## For setting up the media devices\n\nPrepare the `node['media']['devices']` node attribute and use the\n`media::default` or `media::mount_devices` recipe. There is no need for\nspecifying the file system types. It is automatically detected and used for\nmounting the devices. Devices can also be specified by `uuid` and `label`.\n\n```ruby\n# Prepare the media devices\nnode.set['media']['devices'] = {\n  '/dev/sdb1' => '/mnt/videos',\n  '/dev/disk/by-uuid/C398398878' => '/mnt/movies',\n  '/dev/disk/by-label/songs' => '/mnt/songs'\n}\n\n# Include the recipe\ninclude_recipe \"media::default\"\n```\n\n### Pro Tip\nIt is recommended that you set up the devices by UUID because the device\nlocation cannot always be the same and can lead to confusion. The UUID and\nlabel can be found using the `blkid` command on Unix. This command will give\nthe label, uuid, and the file system type.\n\nExample:\n```bash\n$ sudo blkid /dev/sdb1\n$ /dev/sdb1: LABEL=\"movies\" UUID=\"C60475200468787521\" TYPE=\"ntfs\"\n```\n\n## For setting up the NFS shares\n\nBy default the mounted devices mount points are used for setting up the NFS\nshares. It can be overridden by setting the `node['media']['nfs']['shares']`\nnode attribute. Then run the `media::setup_nfs_shares` recipe.\n\n# Attributes\n\n* `node['media']['devices']` - The media devices to mount\n* `node['media']['user']` - The user to be used for media mount points\n* `node['media']['group']` - The group to be used for media mount points\n* `node['media']['nfs']['shares']` - The NFS shares to setup\n* `node['media']['nfs']['network']` - The NFS network address to share with\n* `node['media']['nfs']['writable']` - The writeable property of NFS share\n* `node['media']['nfs']['sync']` - The sync property of NFS share\n* `node['media']['nfs']['options']` - The options to be used for the NFS share\n\n# Recipes\n\n## media::default\nThis is the default recipe. It just runs the `media::mount_devices` recipe.\n\n## media::mount_devices\nThis recipe mounts the specified media devices in the mount points given. See\nUsage for more details.\n\n## media::setup_nfs_shares\nThis recipe installs the requied packages for NFS server and sets up the nfs\nshares.\n\n## media::setup_minidlna\nThis recipe sets up the minidlna media server. Example for setting this up:\n```ruby\nnode.set['minidlna']['video_directories'] = [\n  '/media/storage/movies',\n  '/media/storage/shows'\n]\nnode.set['minidlna']['friendly_name'] = \"Kannan's minidlna\"\ninclude_recipe \"media::setup_minidlna\"\n```\n\n# Author\n\nAuthor:: Kannan Manickam (<me@arangamani.net>)\n",
  "maintainer": "Kannan Manickam",
  "maintainer_email": "me@arangamani.net",
  "license": "Apache 2.0",
  "platforms": {
    "ubuntu": ">= 0.0.0",
    "debian": ">= 0.0.0",
    "redhat": ">= 0.0.0",
    "centos": ">= 0.0.0",
    "fedora": ">= 0.0.0",
    "scientific": ">= 0.0.0"
  },
  "dependencies": {
    "nfs": ">= 0.0.0",
    "minidlna": ">= 0.0.0"
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
  },
  "groupings": {
  },
  "recipes": {
    "media": "Simply runs the media::mount_devices recipe",
    "media::mount_devices": "Mounts the specified media devices",
    "media::setup_nfs_shares": "Sets up the specified NFS shares",
    "media::setup_minidlna": "Sets up the minidlna server"
  },
  "version": "1.1.2"
}