{"name":"minio-grid","version":"0.1.0","description":"Installs/Configures Minio server","long_description":"minio-grid Cookbook\n===================\n\nThis cookbook sets up a Minio service.\n\n## Contents\n\n- [Requirements](#requirements)\n    - [platforms](#platforms)\n    - [packages](#packages)\n- [Attributes](#attributes)\n- [Usage](#usage)\n    - [Recipes](#recipes)\n        - [minio-grid::default](#minio-griddefault)\n        - [minio-grid::docker-compose](#minio-griddocker-compose)\n    - [Role Examples](#role-examples)\n    - [SSL server keys and certificates management by `ssl_cert` cookbook](#ssl-server-keys-and-certificates-management-by-ssl_cert-cookbook)\n    - [Server access key management by Chef Vault](#server-access-key-management-by-chef-vault)\n- [License and Authors](#license-and-authors)\n\n## Requirements\n\n### platforms\n\n- Debian >= 9.0\n- Ubuntu >= 14.04\n- CentOS,RHEL >= 7.3\n\n### packages\n- none.\n\n## Attributes\n\n|Key|Type|Description, example|Default|\n|:--|:--|:--|:--|\n|`['minio-grid']['with_ssl_cert_cookbook']`|Boolean|If this attribute is true, `node['minio-grid']['docker-compose']['config']` are are overridden by the following `common_name` attributes.|`false`|\n|`['minio-grid']['ssl_cert']['common_name']`|String|Minio server common name for TLS|`node['fqdn']`|\n|`['minio-grid']['docker-compose']['app_dir']`|String||`\"#{node['docker-grid']['compose']['app_dir']}/minio\"`|\n|`['minio-grid']['docker-compose']['config_dir']`|String||`\"#{node['minio-grid']['docker-compose']['app_dir']}/config\"`|\n|`['minio-grid']['docker-compose']['data_dir']`|String||`\"#{node['docker-grid']['compose']['app_dir']}/data\"`|\n|`['minio-grid']['docker-compose']['config']`|Hash|`docker-compose.yml` configurations.|See `attributes/default.rb`|\n\n## Usage\n\n### Recipes\n\n#### minio-grid::default\n\nThis recipe does nothing.\n\n#### minio-grid::docker-compose\n\nThis recipe generates a `docker-compose.yml` for the Minio service.\n\n### Role Examples\n\n- `roles/minio-on-docker.rb`\n\n```ruby\nname 'minio-on-docker'\ndescription 'Minio on Docker'\n\nminio_port = '9000'\n\nrun_list(\n  'role[docker]',\n  'recipe[minio-grid::docker-compose]',\n)\n\n#env_run_lists\n\n#default_attributes\n\noverride_attributes(\n  'minio-grid' => {\n    'docker-compose' => {\n      'config' => {\n        'services' => {\n          'minio' => {\n            'restart' => 'always',\n            'image' => 'minio/minio',\n            'ports' => [\n              \"#{minio_port}:9000\",\n            ],\n            'environment' => {\n              # See https://docs.minio.io/\n              #'MINIO_REGION' => 'us-east-1',\n              #'MINIO_BROWSER' => 'on',\n              #'MINIO_DOMAIN' => 'minio.example.com',  # for virtual-host-style requests\n              # These variables will be set by the minio-grid::docker-compose recipe automatically.\n              #'MINIO_ACCESS_KEY' => '${MINIO_ACCESS_KEY}',\n              #'MINIO_SECRET_KEY' => '${MINIO_SECRET_KEY}',\n            },\n            #'volumes' => [\n              # These volumes will be set by the minio-grid::docker-compose recipe automatically.\n              #\"#{node['minio-grid']['docker-compose']['config_dir']}:/root/.minio:rw\",\n              #\"#{node['minio-grid']['docker-compose']['data_dir']}:/data:rw\",\n              #\"#{server_cert_path(node['minio-grid']['ssl_cert']['common_name'])}:/root/.minio/certs/public.crt:ro\",\n              #\"#{server_key_path(node['minio-grid']['ssl_cert']['common_name'])}:/root/.minio/certs/private.key:ro\",\n            #],\n          },\n        },\n      },\n    },\n  },\n)\n```\n\n- `roles/minio-with-ssl-on-docker.rb`\n\n```ruby\nname 'minio-with-ssl-on-docker'\ndescription 'Minio setup with ssl_cert cookbook'\n\nminio_port = '9000'\nminio_cn = 'minio.io.example.com'\n\nrun_list(\n  'role[docker]',\n  'recipe[minio-grid::docker-compose]',\n)\n\n#env_run_lists\n\n#default_attributes\n\noverride_attributes(\n  'minio-grid' => {\n    'with_ssl_cert_cookbook' => true,\n    'ssl_cert' => {\n      'common_name' => minio_cn,\n    },\n    'docker-compose' => {\n      'config' => {\n        'services' => {\n          'minio' => {\n            'restart' => 'always',\n            'image' => 'minio/minio',\n            'ports' => [\n              \"#{minio_port}:9000\",\n            ],\n            'environment' => {\n              # See https://docs.minio.io/\n              #'MINIO_REGION' => 'us-east-1',\n              #'MINIO_BROWSER' => 'on',\n              #'MINIO_DOMAIN' => 'minio.example.com',  # for virtual-host-style requests\n              # These variables will be set by the minio-grid::docker-compose recipe automatically.\n              #'MINIO_ACCESS_KEY' => '${MINIO_ACCESS_KEY}',\n              #'MINIO_SECRET_KEY' => '${MINIO_SECRET_KEY}',\n            },\n            #'volumes' => [\n              # These volumes will be set by the minio-grid::docker-compose recipe automatically.\n              #\"#{node['minio-grid']['docker-compose']['config_dir']}:/root/.minio:rw\",\n              #\"#{node['minio-grid']['docker-compose']['data_dir']}:/data:rw\",\n              #\"#{server_cert_path(node['minio-grid']['ssl_cert']['common_name'])}:/root/.minio/certs/public.crt:ro\",\n              #\"#{server_key_path(node['minio-grid']['ssl_cert']['common_name'])}:/root/.minio/certs/private.key:ro\",\n            #],\n          },\n        },\n      },\n    },\n  },\n)\n```\n\n### SSL server keys and certificates management by `ssl_cert` cookbook\n\n- create chef-vault items.\n\n```text\n$ ruby -rjson -e 'puts JSON.generate({\"private\" => File.read(\"minio.io.example.com.prod.key\")})' \\\n> > ~/sec/tmp/minio.io.example.com.prod.key.json\n\n$ ruby -rjson -e 'puts JSON.generate({\"public\" => File.read(\"minio.io.example.com.prod.crt\")})' \\\n> > ~/sec/tmp/minio.io.example.com.prod.crt.json\n\n$ cd $CHEF_REPO\n\n$ knife vault create ssl_server_keys minio.io.example.com.prod \\\n> --json ~/sec/tmp/minio.io.example.com.prod.key.json\n\n$ knife vault create ssl_server_certs minio.io.example.com.prod \\\n> --json ~/sec/tmp/minio.io.example.com.prod.crt.json\n```\n\n- grant reference permission to the Minio host\n\n```text\n$ knife vault update ssl_server_keys  minio.io.example.com.prod -S 'name:minio-host.example.com'\n$ knife vault update ssl_server_certs minio.io.example.com.prod -S 'name:minio-host.example.com'\n```\n\n- modify run_list and attributes\n\n```ruby\nrun_list(\n  'recipe[minio-grid::docker-compose]',\n)\n\noverride_attributes(\n  'minio-grid' => {\n    'with_ssl_cert_cookbook' => true,\n    'ssl_cert' => {\n      'common_name' => 'minio.io.example.com',\n    },\n    # ...\n  },\n)\n```\n\n### Server access key management by Chef Vault\n\n- create vault items.\n\n```text\n$ cat ~/sec/tmp/minio_access_key.json\n{\n  \"keyid\":\"********************\",\n  \"secret\":\"****************************************\"\n}\n\n$ cd $CHEF_REPO_PATH\n$ knife vault create minio access_key --json ~/sec/tmp/minio_access_key.json\n```\n\n- grant reference permission to the minio host\n\n```text\n$ knife vault update minio access_key -S 'name:minio-host.example.com'\n```\n\n- modify attributes\n\n```ruby\noverride_attributes(\n  'minio-grid' => {\n    # ...\n    'access_key_vault_item' => {\n      'vault' => 'minio',\n      'name' => 'access_key',\n      'env_context' => false,\n      'key' => 'keyid',\n    },\n    'secret_key_vault_item' => {\n      'vault' => 'minio',\n      'name' => 'access_key',\n      'env_context' => false,\n      'key' => 'secret',\n    },\n    # ...\n  },\n)\n```\n\n## License and Authors\n\n- Author:: whitestar at osdn.jp\n\n```text\nCopyright 2018, whitestar\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n","maintainer":"whitestar","maintainer_email":"","license":"Apache-2.0","platforms":{"centos":">= 7.0","redhat":">= 7.0","debian":">= 8.0","ubuntu":">= 14.04"},"dependencies":{"docker-grid":">= 0.4.0","platform_utils":">= 0.4.4","ssl_cert":">= 0.3.9"},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{},"source_url":"http://scm.osdn.jp/gitroot/metasearch/grid-chef-repo.git","issues_url":"https://osdn.jp/projects/metasearch/ticket","chef_version":[[">= 12"]],"ohai_version":[]}