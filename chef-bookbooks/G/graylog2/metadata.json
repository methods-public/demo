{
  "name": "graylog2",
  "description": "Installs and configures Graylog - maintained by Graylog, Inc.",
  "long_description": "Description\n-----------\nUnit tests [![Build Status](https://travis-ci.org/Graylog2/graylog2-cookbook.svg)](https://travis-ci.org/Graylog2/graylog2-cookbook)\nIntegration tests [![Build Status](https://jenkins-01.eastus.cloudapp.azure.com/job/graylog2-cookbook/badge/icon)](https://jenkins-01.eastus.cloudapp.azure.com/job/graylog2-cookbook/)\n\nThis _Chef_ cookbook installs and configures the [Graylog](http://www.graylog.org) log management system.\n\nIt is using the official installation packages provided by [_Graylog, Inc._](http://www.graylog.com). It needs as requirement an installation of Java, [Elasticsearch](http://www.elasticsearch.org) and [MongoDB](https://www.mongodb.org).\n\nUsage\n-----\n\n### Quickstart\nTo give this cookbook a try simply use the Kitchen test suite.\n\n```\nkitchen setup oracle-ubuntu-1404\nopen http://localhost:9000\nLogin with admin/admin\n```\n\n### Recipes\nThe cookbook contains several recipes for different installation setups. Pick only the recipes\nyou need for your environment.\n\n|Recipe             | Description |\n|:------------------|:------------|\n|default            |Setup the Graylog package repository|\n|server             |Install Graylog server|\n|authbind           |Give the Graylog user access to privileged ports like 514 (only on Ubuntu/Debian)|\n|collector_sidecar  |Install Graylog's collector sidecar|\n\nIn a minimal setup you need at least the _default_ and _server_ recipes. Combined with\nMongoDB and Elasticsearch, a run list might look like this:\n\n```\nrun_list \"recipe[java]\",\n         \"recipe[elasticsearch]\",\n         \"recipe[mongodb]\",\n         \"recipe[graylog2]\",\n         \"recipe[graylog2::server]\"\n```\n\nKeep in mind that Graylog needs Elasticsearch 2.x+, what can be installed with the Elasticsearch cookbook version < 3.0.0\n\n### Attributes\nGraylog runs currently with Java 8. To install the correct version set this attribute:\n\n#### Oracle\n\n```json\n  \"java\": {\n    \"jdk_version\": \"8\",\n    \"install_flavor\": \"oracle\",\n    \"oracle\": {\n      \"accept_oracle_download_terms\": true\n    }\n  }\n```\n\n#### OpenJDK\n\n```json\n  \"java\": {\n    \"jdk_version\": \"8\",\n    \"install_flavor\": \"openjdk\"\n  }\n```\n\nOpenJDK and Oracle JDK are both fine for Graylog. Note that you must accept\nOracle's download terms if you select the oracle install flavor.\n\nOn some platforms you need to accept terms to install OpenJDK too. See the [java\ncookbook's README](https://supermarket.chef.io/cookbooks/java) for more\ninformation.\n\nYou _have_ to use a  certain version of Elasticsearch for every Graylog Version, currently\nthis is 5.5.1. The cluster name should be 'graylog':\n\n```json\n  \"elasticsearch\": {\n    \"version\": \"5.5.1\",\n    \"cluster\": {\n      \"name\": \"graylog\"\n    }\n  }\n```\n\nGraylog itself needs a secret for encryption and a hashed password for the root user. By default this user is called _admin_.\n\nYou can create the secret with this shell command `pwgen -s 96 1`.\n\nThe password can be generated with `echo -n yourpassword | shasum -a 256 | awk '{print $1}'`\n\n```json\n  \"graylog2\": {\n    \"password_secret\": \"ZxUahiN48EFVJgzRTzGO2olFRmjmsvzybSf4YwBvn5x1asLUBPe8GHbOQTZ0jzuAB7dzrNPk3wCEH57PCZm23MHAET0G653G\",\n    \"root_password_sha2\": \"e3c652f0ba0b4801205814f8b6bc49672c4c74e25b497770bb89b22cdeb4e951\",\n    \"server\": {\n      \"java_opts\": \"-Djava.net.preferIPv4Stack=true\"\n    }\n  }\n```\n\nAlternatively you can create an encrypted data bag and store the secrets there. The data should be called\n'secrets' with an item 'graylog'.\n\n```shell\nknife data bag create --secret-file ~/.chef/encrypted_data_bag_secret secrets graylog\n\n{\n  \"id\": \"graylog\",\n  \"server\": {\n    \"root_password_sha2\": \"<root password as sha256>\",\n    \"password_secret\": \"<random string as encryption salt>\"\n  }\n}\n```\n\nYou can take a look into the attributes file under `attributes/default.rb` to get an idea\nwhat can be configured for Graylog.\n\n### Node discovery\nThe cookbook is able to use Chef's search to find Elasticsearch and other Graylog nodes. To configure\na dynamic cluster set the following attributes:\n\n#### Elasticsearch discovery\n\n```json\n  \"graylog2\": {\n    \"elasticsearch\": {\n      \"node_search_query\": \"role:elasticsearch\",\n      \"node_search_attribute\": \"ipaddress\"\n    }\n  }\n```\n\nIf you have multiple server one need to be set as a master, use this attribute to do so\n\n```\ndefault.graylog2[:ip_of_master] = node.ipaddress\n```\n\n### Running behind a NAT'ed public IP\n\nIf you are running Graylog behind a NAT, you will need to forward port 9000 to the outside as well as:\n\n```json\n  \"graylog2\": {\n      \"rest\": {\n        \"listen_uri\": \"http://0.0.0.0:9000/api/\"\n      },\n      \"web\": {\n        \"listen_uri\": \"http://0.0.0.0:9000/\",\n        \"endpoint_uri\": \"http://<public facing IP>:9000/api\"\n      }\n  }\n```\n\nSee [graylog docs](http://docs.graylog.org/en/2.3/pages/configuration/web_interface.html#single-or-separate-listeners-for-web-interface-and-rest-api) for more info.\n\n### Authbind\n\nUbuntu/Debian systems allow a user to bind a proccess to a certain privileged port below 1024.\nThis is called authbind and is supported by this cookbook. So it is possible to let Graylog listen on port 514 and act like a normal syslog server.\nTo enable this feature include the [authbind](https://supermarket.chef.io/cookbooks/authbind) cookbook to your run list and also the recipe\n`recipe[graylog2::authbind]` from this cookbook.\nBy default the recipe will give the Graylog user permission to bind to port 514 if you need more than that you can\nset the attribute `default.graylog2[:authorized_ports]` to an array of allowed ports.\n\n### Development and testing\n\nThe cookbook comes with unit and integration tests for Ubuntu/Debian/CentOS. You can run them by using Rake and Test Kitchen.\n\nUnit tests:\n\n```\n  $ bundle exec rake spec\n```\n\nIntegration tests:\n\n```\n  $ kitchen list\n  $ kitchen converge oracle-ubuntu-1404\n  $ kitchen verify oracle-ubuntu-1404\n```\n\nAdditionally you can verify the coding style by running RoboCop and Foodcritic.\n\nVerify Ruby syntax with RuboCop:\n\n```\n  $ bundle exec rake style:ruby\n```\n\nVerify Chef syntax with Foodcritic:\n\n```\n  $ bundle exec rake style:chef\n```\n\nLicense\n-------\n\nAuthor: Marius Sturm (<marius@graylog.com>) and [contributors](http://github.com/graylog2/graylog2-cookbook/graphs/contributors)\n\nLicense: Apache 2.0\n",
  "maintainer": "Graylog, Inc.",
  "maintainer_email": "marius@graylog.com",
  "license": "Apache 2.0",
  "platforms": {
    "ubuntu": ">= 0.0.0",
    "debian": ">= 0.0.0",
    "centos": ">= 0.0.0"
  },
  "dependencies": {
    "authbind": ">= 0.1.8",
    "java": ">= 0.0.0",
    "ark": ">= 0.0.0"
  },
  "recommendations": {

  },
  "suggestions": {
    "mongodb": ">= 0.0.0",
    "elasticsearch": "< 3.0.0",
    "authbind": ">= 0.0.0"
  },
  "conflicting": {

  },
  "providing": {
    "graylog2": ">= 0.0.0"
  },
  "replacing": {

  },
  "attributes": {

  },
  "groupings": {

  },
  "recipes": {

  },
  "version": "2.4.4",
  "source_url": "https://github.com/Graylog2/graylog2-cookbook",
  "issues_url": "https://github.com/Graylog2/graylog2-cookbook/issues",
  "privacy": false,
  "chef_versions": [

  ],
  "ohai_versions": [

  ],
  "gems": [

  ]
}
