{"name":"gitlab-grid","version":"0.1.6","description":"Installs/Configures gitlab-grid","long_description":"gitlab-grid Cookbook\n=====================\n\nThis cookbook sets up a GitLab server.\n\n## Contents\n\n- [Requirements](#requirements)\n    - [platforms](#platforms)\n    - [packages](#packages)\n- [Attributes](#attributes)\n- [Usage](#usage)\n    - [Recipes](#recipes)\n        - [gitlab-grid::default](#gitlab-griddefault)\n        - [gitlab-grid::server](#gitlab-gridserver)\n        - [gitlab-grid::docker-compose](#gitlab-griddocker-compose)\n        - [gitlab-grid::runner-docker-compose](#gitlab-gridrunner-docker-compose)\n    - [Role Examples](#role-examples)\n    - [Internal CA certificates management by ssl_cert cookbook](#internal-ca-certificates-management-by-ssl_cert-cookbook)\n    - [SSL server keys and certificates management by ssl_cert cookbook](#ssl-server-keys-and-certificates-management-by-ssl_cert-cookbook)\n- [License and Authors](#license-and-authors)\n\n## Requirements\n\n### platforms\n- none.\n\n### packages\n- none.\n\n## Attributes\n\n|Key|Type|Description, example|Default|\n|:--|:--|:--|:--|\n|`['gitlab-grid']['with_ssl_cert_cookbook']`|Boolean|If this attribute is true, CA certificate and server key pairs are deployed and the `node['gitlab-grid']['gitlab.rb']` settings are overridden by the following `common_name` attributes.|`false`|\n|`['gitlab-grid']['ssl_cert']['ca_name']`|String|Internal CA name that signs server certificates.|`nil`|\n|`['gitlab-grid']['ssl_cert']['common_name']`|String|GitLab server common name for TLS|`node['fqdn']`|\n|`['gitlab-grid']['ssl_cert']['registry']['reuse_gitlab_common_name']`|Boolean|Reuse GitLab domain (same common name) for TLS|`false`|\n|`['gitlab-grid']['ssl_cert']['registry']['common_name']`|String|Container registry service's unique common name for TLS|`nil`|\n|`['gitlab-grid']['gitlab.rb']`|Hash|`gitlab.rb` configurations.|See `attributes/default.rb`|\n|`['gitlab-grid']['gitlab.rb_extra_config_str']`|String|`gitlab.rb` extra configuration string (source code in Ruby).|`nil`|\n|`['gitlab-grid']['runner-docker-compose']['import_ca']`|Boolean|Import an internal CA certificate to a gitlab-runner container or not.|`false`|\n|`['gitlab-grid']['runner-docker-compose']['app_dir']`|String||`\"#{node['docker-grid']['compose']['app_dir']}/gitlab-runner\"`|\n|`['gitlab-grid']['runner-docker-compose']['etc_dir']`|String||`\"#{node['gitlab-grid']['runner-docker-compose']['app_dir']}/etc\"`|\n|`['gitlab-grid']['runner-docker-compose']['config']`|Hash|`docker-compose.yml` configurations.|See `attributes/default.rb`|\n\n## Usage\n\n### Recipes\n\n#### gitlab-grid::default\n\nThis recipe does nothing.\n\n#### gitlab-grid::server\n\nThis recipe sets up a GitLab server.\n\n#### gitlab-grid::docker-compose\n\nThis recipe generates a `docker-compose.yml` for the GitLab server.\n\n#### gitlab-grid::runner-docker-compose\n\nThis recipe generates a `docker-compose.yml` for the gitlab-runner.\n\n### Role Examples\n\n- `roles/gitlab.rb`\n\n```ruby\nname 'gitlab'\ndescription 'GitLab'\n\nrun_list(\n  'recipe[gitlab-grid::server]',\n)\n\n#env_run_lists()\n\n#default_attributes()\n\ngitlab_cn = 'gitlab.io.example.com'\n\noverride_attributes(\n  'gitlab-grid' => {\n    # See https://docs.gitlab.com/omnibus/settings/configuration.html\n    'gitlab.rb' => {\n      'external_url' => \"http://#{gitlab_cn}\",\n      'gitlab_rails' => {\n        'time_zone' => 'Asia/Tokyo',\n      },\n    },\n  },\n)\n```\n\n- `roles/gitlab-with-ssl-cert.rb`\n\n```ruby\nname 'gitlab-with-ssl-cert'\ndescription 'GitLab setup with ssl_cert cookbook'\n\nrun_list(\n  #'recipe[ssl_cert::server_key_pairs]',  # gitlab-grid cookbook < 0.1.4\n  'recipe[gitlab-grid::server]',\n)\n\n#env_run_lists()\n\n#default_attributes()\n\ngitlab_cn = 'gitlab.io.example.com'\n\noverride_attributes(\n  'ssl_cert' => {\n    #'common_names' => [\n    #  gitlab_cn,  # gitlab-grid cookbook < 0.1.6\n    #],\n  },\n  'gitlab-grid' => {\n    'with_ssl_cert_cookbook' => true,\n    'ssl_cert' => {\n      'common_name' => gitlab_cn,\n    },\n    'gitlab.rb' => {\n      'external_url' => \"https://#{gitlab_cn}\",\n      'gitlab_rails' => {\n        'time_zone' => 'Asia/Tokyo',\n      },\n      'nginx' => {\n        'redirect_http_to_https' => true,\n      },\n    },\n  },\n)\n```\n\n- `roles/gitlab-on-docker.rb`\n\n```ruby\nname 'gitlab-on-docker'\ndescription 'GitLab on Docker'\n\ngitlab_cn = 'gitlab.io.example.com'\ngitlab_http_port = '8080'\ngitlab_ssh_port = '2022'\n\nrun_list(\n  'role[docker]',\n  'recipe[gitlab-grid::docker-compose]',\n)\n\n#env_run_lists()\n\n#default_attributes()\n\noverride_attributes(\n  'gitlab-grid' => {\n    'gitlab.rb' => {\n      'external_url' => \"http://#{gitlab_cn}:#{gitlab_http_port}\",\n      'gitlab_rails' => {\n        'time_zone' => 'Asia/Tokyo',\n        'gitlab_shell_ssh_port' => gitlab_ssh_port.to_i,\n      },\n      'nginx' => {\n        'redirect_http_to_https' => false,\n      },\n    },\n    'docker-compose' => {\n      'config' => {\n        # Version 2 docker-compose format\n        'version' => '2',\n        'services' => {\n          'gitlab' => {\n            'restart' => 'always',\n            'image' => 'gitlab/gitlab-ce:latest',\n            'hostname' => gitlab_cn,\n            'ports' => [\n              \"#{gitlab_http_port}:#{gitlab_http_port}\",\n              \"#{gitlab_ssh_port}:22\",\n            ],\n            'environment' => {\n            },\n            #'volumes' => [\n            #],\n          },\n        },\n      },\n    },\n  },\n)\n```\n\n- `roles/gitlab-with-ssl-on-docker.rb`: and activates Container registry feature.\n\n```ruby\nname 'gitlab-with-ssl-on-docker'\ndescription 'GitLab with SSL on Docker'\n\ngitlab_cn = 'gitlab.io.example.com'\ngitlab_https_port = '8443'\ngitlab_ssh_port = '2022'\ngitlab_registry_port = '5050'\n\nrun_list(\n  #'recipe[ssl_cert::server_key_pairs]',  # gitlab-grid cookbook < 0.1.4\n  'role[docker]',\n  'recipe[gitlab-grid::docker-compose]',\n)\n\n#env_run_lists()\n\n#default_attributes()\n\noverride_attributes(\n  'ssl_cert' => {\n    #'common_names' => [\n    #  gitlab_cn,  # gitlab-grid cookbook < 0.1.6\n    #],\n  },\n  'gitlab-grid' => {\n    'with_ssl_cert_cookbook' => true,\n    'ssl_cert' => {\n      'common_name' => gitlab_cn,\n      'registry' => {\n        'reuse_gitlab_common_name' => true,\n        # or\n        #'reuse_gitlab_common_name' => false,\n        #'common_name' => registry_gitlab_cn,\n      },\n    },\n    'gitlab.rb' => {\n      'external_url' => \"https://#{gitlab_cn}:#{gitlab_https_port}\",\n      'registry_external_url' => \"https://#{gitlab_cn}:#{gitlab_registry_port}\",  # Do not use 5000 if same domain (common name)\n      'gitlab_rails' => {\n        'time_zone' => 'Asia/Tokyo',\n        'gitlab_shell_ssh_port' => gitlab_ssh_port.to_i,\n      },\n      'nginx' => {\n        'redirect_http_to_https' => true,\n      },\n      'registry_nginx' => {\n        'redirect_http_to_https' => true,\n      },\n    },\n    'docker-compose' => {\n      'config' => {\n        # Version 2 docker-compose format\n        'version' => '2',\n        'services' => {\n          'gitlab' => {\n            'restart' => 'always',\n            'image' => 'gitlab/gitlab-ce:latest',\n            'hostname' => gitlab_cn,\n            'ports' => [\n              \"#{gitlab_https_port}:#{gitlab_https_port}\",\n              \"#{gitlab_registry_port}:#{gitlab_registry_port}\",\n              \"#{gitlab_ssh_port}:22\",\n            ],\n            'environment' => {\n            },\n            #'volumes' => [\n            #],\n          },\n        },\n      },\n    },\n  },\n)\n```\n\n- `roles/gitlab-runner.rb`\n\n```ruby\nname 'gitlab-runner'\ndescription 'GitLab-runner'\n\nrun_list(\n  #'recipe[ssl_cert::ca_certs]',  # gitlab-grid cookbook < 0.1.4\n  'role[docker]',\n  'recipe[gitlab-grid::runner-docker-compose]',\n)\n\n#env_run_lists()\n\n#default_attributes()\n\nca_name = 'grid_ca'  # Internal CA\n\noverride_attributes(\n  'ssl_cert' => {\n    #'ca_names' => [\n    #  ca_name,  # gitlab-grid cookbook < 0.1.6\n    #],\n  },\n  'gitlab-grid' => {\n    #'with_ssl_cert_cookbook' => true,\n    'ssl_cert' => {\n      'ca_name' => ca_name,\n    },\n    'runner-docker-compose' => {\n      #'import_ca' => true,\n      'config' => {\n        'services' => {\n          'runner' => {\n            'volumes' => [\n              # for Docker executor\n              '/var/run/docker.sock:/var/run/docker.sock',\n            ],\n          },\n        },\n      },\n    },\n  },\n)\n```\n\n### Internal CA certificates management by ssl_cert cookbook\n\nSee https://supermarket.chef.io/cookbooks/ssl_cert\n\n### SSL server keys and certificates management by ssl_cert cookbook\n\n- create vault items.\n\n```text\n$ ruby -rjson -e 'puts JSON.generate({\"private\" => File.read(\"gitlab.io.example.com.prod.key\")})' \\\n> > ~/tmp/gitlab.io.example.com.prod.key.json\n\n$ ruby -rjson -e 'puts JSON.generate({\"public\" => File.read(\"gitlab.io.example.com.prod.crt\")})' \\\n> > ~/tmp/gitlab.io.example.com.prod.crt.json\n\n$ cd $CHEF_REPO_PATH\n\n$ knife vault create ssl_server_keys gitlab.io.example.com.prod \\\n> --json ~/tmp/gitlab.io.example.com.prod.key.json\n\n$ knife vault create ssl_server_certs gitlab.io.example.com.prod \\\n> --json ~/tmp/gitlab.io.example.com.prod.crt.json\n```\n\n- grant reference permission to the gitlab host\n\n```text\n$ knife vault update ssl_server_keys  gitlab.io.example.com.prod -S 'name:gitlab*.io.example.com'\n$ knife vault update ssl_server_certs gitlab.io.example.com.prod -S 'name:gitlab*.io.example.com'\n```\n\n- modify run_list and attributes\n\n```ruby\nrun_list(\n  #'recipe[ssl_cert::server_key_pairs]',  # gitlab-grid <= 0.1.3\n  'recipe[gitlab-grid::server]',\n  #'recipe[gitlab-grid::docker-compose]',\n)\n\noverride_attributes(\n  'ssl_cert' => {\n    'common_names' => [\n      'gitlab.io.example.com',\n    ],\n  },\n  'gitlab-grid' => {\n    'with_ssl_cert_cookbook' => true,\n    'ssl_cert' => {\n      'common_name' => 'gitlab.io.example.com',\n    },\n    # ...\n  },\n)\n```\n\n## License and Authors\n\n- Author:: whitestar at osdn.jp\n\n```text\nCopyright 2017, whitestar\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n","maintainer":"whitestar","maintainer_email":"","license":"Apache 2.0","platforms":{"ubuntu":">= 16.04","centos":">= 7.3","redhat":">= 7.3"},"dependencies":{"docker-grid":">= 0.3.6","ssl_cert":">= 0.4.1"},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{},"source_url":"http://scm.osdn.jp/gitroot/metasearch/grid-chef-repo.git","issues_url":"https://osdn.jp/projects/metasearch/ticket","chef_version":[[">= 12"]],"ohai_version":[]}