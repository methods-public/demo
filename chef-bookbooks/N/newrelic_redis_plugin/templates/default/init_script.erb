#!/bin/sh
# Generated by Chef

### BEGIN INIT INFO
# Provides: <%= @service_name %>
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       Controls Apache newrelic_redis_plugin as a Service for <%= @instance_name %>
### END INIT INFO

# Example of a very simple *nix init script
# Typical usage is to do:
#
#   copy this file to: /etc/init.d/<%= @service_name %>
#   chmod 755 /etc/init.d/<%= @service_name %>
#   chown root:root /etc/init.d/<%= @service_name %>
#   update-rc.d <%= @service_name %> defaults
#   update-rc.d <%= @service_name %> enable

cmd="<%= @cmd_file %>"
user="<%= node['newrelic_redis_plugin']['newrelic_user'] %>"

name="<%= @service_name %>"
pid_file="<%= @pid_file %>"
log_file="<%= @log_file %>"

get_pid() {
    cat "$pid_file"
}

is_running() {
    [ -f "$pid_file" ] && ps `get_pid` > /dev/null 2>&1
}

case "$1" in
    start)
    if is_running; then
        echo "Already started"
    else
        echo "Starting $name"
        if [ -z "$user" ]; then
            sudo $cmd -d
        else
            sudo -u "$user" $cmd -d
        fi

        if ! is_running; then
            echo "Unable to start, see $log_file"
            exit 1
        fi
    fi
    ;;
    stop)
    if is_running; then
        echo -n "Stopping $name.."
        if [ -z "$user" ]; then
            sudo $cmd -k
        else
            sudo -u "$user" $cmd -k
        fi

        for i in {1..10}
        do
            if ! is_running; then
                break
            fi

            echo -n "."
            sleep 1
        done
        echo

        if is_running; then
            echo "Not stopped; may still be shutting down or shutdown may have failed"
            exit 1
        else
            echo "Stopped"
            if [ -f "$pid_file" ]; then
                rm "$pid_file"
            fi
        fi
    else
        echo "Not running"
    fi
    ;;
    restart)
    $0 stop
    if is_running; then
        echo "Unable to stop, will not attempt to start"
        exit 1
    fi
    $0 start
    ;;
    status)
    if is_running; then
        echo "Running"
    else
        echo "Stopped"
        exit 1
    fi
    ;;
    *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
    ;;
esac

exit 0