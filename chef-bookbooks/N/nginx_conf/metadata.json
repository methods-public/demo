{"name":"nginx_conf","version":"2.0.0","description":"Installs/Configures nginx_conf","long_description":"[![Circle CI](https://circleci.com/gh/tablexi/chef-nginx_conf.svg?style=svg)](https://circleci.com/gh/tablexi/chef-nginx_conf)\n#Description#\n\nManage nginx server configuration files.\n\n\n\n\n#Requirements#\n * Chef >= 11.0\n * Nginx cookbook - As of version 2.0.0, we no longer require the nginx cookbook explicitly. You can use whatever means to install nginx. The only requirement is a Chef service resource called nginx be made available to this cookbook.\n\n\n#Attributes#\n\nSee a list of all [attributes](https://github.com/firebelly/chef-nginx_conf/tree/master/attributes/default.rb).\n\n\n#Usage#\n\n\nAdd the `nginx_conf` recipe to your runlist.\n\n\n##confs##\n\nRather then accessing the LWRP directly, add a site hash to the `confs` attribute list.\n\n    node['nginx_conf']['confs'] = [{\n      'test1.mywebsite.com' => {\n        'socket' => \"/var/www/myapp/shared/tmp/sockets/unicorn.socket\"\n      },\n      'test2.mywebsite.com' => {\n        'root' => \"/var/www/myapp\",\n        'site_type' => :static\n      },\n      'test3.mywebsite.com' => {\n        'action' => :disable\n      },\n      'test4.mywebsite.com' => {\n        'action' => :delete\n      },\n    }]\n\n##Create##\n\nCreates a nginx configuration in the sites-available directory, tests it, symlinks to sites-enabled, and restarts nginx.  See a list of all [LWRP attributes](https://github.com/firebelly/chef-nginx_conf/tree/master/resources/file.rb).\n\n    nginx_conf_file \"mywebsite.com\" do\n      socket \"/var/www/myapp/shared/tmp/sockets/unicorn.socket\"\n    end\n\nOutputs to sites-available/mywebsite.com:\n\n    server {\n      listen 80;\n\n      server_name mywebsite.com;\n\n      location / {\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header Host $http_host;\n        proxy_redirect off;\n        proxy_pass http://unix:/var/www/myapp/shared/tmp/sockets/unicorn.socket;\n      }\n    }\n\nCreating a static conf is even easier.\n\n    nginx_conf_file \"mywebsite.com\" do\n      root \"/var/www/myapp\"\n      site_type :static\n    end\n\nOutputs to sites-available/mywebsite.com:\n\n    server {\n      listen 80;\n\n      server_name mywebsite.com;\n\n      root \"/var/www/myapp\";\n    }\n\n###SSL\n\nTo configure ssl:\n\n    nginx_conf_file \"mywebsite.com\" do\n      ssl({'public' => 'public_key', 'private' => 'private_key', 'name' => 'mywebsite'})\n    end\n\n*NOTE* The name attribute is optional.  It defaults to the resource conf_name or resource name. It is only necessary, if you want to define the public and private key file name.  EXE Using the value above, the file names would be mywebsite.public.crt & mywebsite.private.key respectively.\n\n\n##Disable##\n\nRemoves the symlink between sites-enabled and sites-available for the named configuration.\n\n    nginx_conf_file \"mywebsite.com\" do\n      action :disable\n    end\n\n##Delete##\n\nRemoves the symlink and deletes the configuration:\n\n    nginx_conf_file \"mywebsite.com\" do\n      action :delete\n    end\n\n###SSL Delete\n\nDeleting SSL certs is managed by the delete resource, but there are some situations where you want to manage the deletion yourself.  To do this, set the `[:nginx_conf][:defaults][:delete][:ssl]` to false or add :delete false to the nginx_conf_file ssl attribute hash.\n\n    nginx_conf_file \"mywebsite.com\" do\n      action :delete\n      ssl({'delete' => false})\n    end\n\n\n#Testing#\n\nWe use foodcritic and chefspec to check basic functionality.  To run tests:\n\n    bundle install\n    berks install\n    strainer test\n","maintainer":"Table XI","maintainer_email":"sysadmins@tablexi.com","license":"GNU Public License 3.0","platforms":{"ubuntu":">= 0.0.0","debian":">= 0.0.0","centos":">= 0.0.0","redhat":">= 0.0.0","amazon":">= 0.0.0","scientific":">= 0.0.0","oracle":">= 0.0.0","fedora":">= 0.0.0"},"dependencies":{},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{}}