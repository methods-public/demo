{
  "name": "op5_manage",
  "description": "Manage op5 hosts and services",
  "long_description": "# op5_manage\n\n- Create, modify or remove hosts and services.\n- Schedule downtimes for host objects.\n- Sophisticated caching to perform as less Api requests as possible.\n- Chef Vault support for securing op5 credentials.\n\nAll operations are performed using the [restful op5 Api](https://www.op5.com/explore-op5-monitor/features/op5-monitor-api/)\n\n## Supported Platforms\n\n- CentOS 6, 7\n- Red Hat Enterprise Linux 6, 7\n- SuSE Linux Enterprise Server 11, 12\n\nOther versions and platforms should work as well but are untested.\n\n## Usage\n\n### Adding a host in fife minutes example\n\nThe easiest way to create a host with Chef is to use the op5_manage_host resource in your own cookbook.\n\n1. Install [ChefDK](https://downloads.chef.io/chefdk) on a Unix like machine with network access to your op5 server.\n2. Issue the commands below to build a new environment for Chef Solo with a sample cookbook \"monitor\".\n\n```\nmkdir -p /tmp/test_op5/cookbooks\ncd /tmp/test_op5\necho \"cookbook_path File.expand_path('/tmp/test_op5/cookbooks', __FILE__)\" > ./solo.rb\ncd cookbooks\nchef generate cookbook monitor\necho -e \"\\ndepends 'op5_manage'\\n\" >> ./monitor/metadata.rb\necho -e \"source 'https://supermarket.chef.io'\\n\\nmetadata\" > ./monitor/Berksfile\ncd ./monitor\nberks vendor ../\n\n\nvim ./recipes/default.rb\n```\n\n3. Overwrite ./recipes/default.rb with the recipe below and customize url, username and password.\n\n```ruby\n# Endpoint configuration\n\nnode.default['op5_manage']['endpoint'].merge! (\n  {\n    'url'          => 'https://192.168.211.10/api',\n    'tls_verify'   => false,\n    'vault_name'   => nil\n  }\n)\n\nnode.run_state['endpoint_auth'] = {\n    'user'        => 'administrator',\n    'password'    => 'Adm!nPa$$w0rd'\n}\n\nnode.default['op5_manage']['cache']['path'] = '/tmp/test_op5/cache.json'\n\n\n\n# Monitoring\n\nop5_manage_change 'config' do action :initiate end\n\nop5_manage_host 'webserver.local' do\n  alias_name       'webserver'\n  address          '10.23.42.20'\n  template         'default-host-template'\n  hostgroups       { 'Linux servers' => true, 'Web servers https' => true }\n  action           :create\nend\n\nop5_manage_service 'webserver.local;MySQL port' do\n  check_command       'check_tcp'\n  check_command_args  '3306'\n  template            'default-service'\nend\n\nop5_manage_change 'config' do action :save end\n\n\nruby_block 'wait for host' do\n  block do\n    sleep(15)\n  end\nend\n\nop5_manage_host_downtime 'maintenance_webserver' do\n  command      \"SCHEDULE_HOST_DOWNTIME\"\n  host_name    \"webserver.local\"\n  start_time   \"2018-01-28 09:00:00\"\n  end_time     \"2018-01-28 11:00:00\"\n  comment      \"webserver upgrade\"\nend\n```\n\n4. Thats it. Now execute Chef Solo.\n\n`chef-solo -c ../../solo.rb -o 'recipe[monitor]'`\n\n\n### Configuration\n\n#### op5 endpoints\n\nAn endpoint is all the needed information to connect to an op5 Api server. All of them are configured by attributes in the\n default.rb attribute file. In addition sensitive credentials like username and password may stored in a Chef Vault.\n\n#### Creating an endpoint vault\n\nOn your Chef build environment write your credentials in a JSON file (e.g. `~/op5_endpoints.json`).\n\n```json\n{\n  \"op5_manage\": {\n    \"endpoints\": {\n      \"https://server.domain.tld/api\": {\n        \"user\": \"Username\",\n        \"password\": \"Pa$$w0rd\"\n      },\n      \"https://other.endpoint.local/api\": {\n          \"user\": \"Username$LDAP\",\n          \"password\": \"Pa$$w0rd\"\n      }\n    }\n  }\n}\n```\n\nCreate the vault and import the data from file. The vault is named \"op5_manage\" and the item containing the credentials\nis named \"endpoints\".\n\n```\nknife vault create op5_manage endpoints \\\n-A user1,user2 -S 'run_list:recipe\\[op5_manage\\] OR run_list:recipe\\[op5_manage\\:\\:*\\]' \\\n-M client -J ~/op5_endpoints.json\n```\n\nChanging the content of a vault item is easy.\n\n```\nknife vault edit op5_manage endpoints\n```\n\nConfigure attributes to use your vault instead of username and password. See attributes file default.rb for more\n information.\n\n\n#### Configure the endpoint\n\nIt's good practice to configure the endpoint url in your environments.\n\n```json\n{\n  \"name\": \"prod\",\n  \"description\": \"Production Environment\",\n  \"cookbook_versions\": {\n  },\n  \"json_class\": \"Chef::Environment\",\n  \"chef_type\": \"environment\",\n  \"default_attributes\": {\n    \"op5_manage\": {\n      \"endpoint\": {\n        \"url\": \"https://server.domain.tld/api\"\n      }\n    }\n  },\n  \"override_attributes\": {\n  }\n}\n```\n\nThis will point to the corresponding endpoint credentials in your vault item.\n\n\n### Order of run list\n\n- The op5_manage cookbook should be the last in run list.\n- host recipe must be executed before service recipe.\n- host recipe must be executed before host_downtime recipe and configuration must be saved.\n\n### Add a Chef node to op5 monitoring\n\nThe node recipe is used to manage a node itself in op5. This is the common use case so you just have to add the default\n recipe into your run list. Without any configuration, a host is created in op5 with a host group depending on your os.\n\n```json\n{\n  \"run_list\": [\n    \"recipe[op5_manage]\"\n  ]\n}\n```\n\nUse attributes to modify host parameters. Either in a recipe or in a role or environment (with JSON).\n\n```ruby\nnode.default['op5_manage']['node'].merge! (\n  {\n    'hostgroups'              => { 'Web servers https' => true },\n    'custom_variable'         => {\n      '_API_PING_TXT'         => 'OK',\n      '_API_PING_URL'         => '/artifactory/api/system/ping'\n    },\n    'services' => {\n      'HTTPS URL API Ping'    => {\n        'template'            => 'default-service',\n        'check_command'       => 'check_https_url_string',\n        'check_command_args'  => '\"$_API_PING_URL$\"!\"$_API_PING_TXT$\"',\n        'notes_url'           => 'https://intranet.mydomain.tld/Monitoring#Checks-HTTPSURL',\n        'action_url'          => 'https://$HOSTADDRESS$$_API_PING_URL$'\n      }\n    }\n  }\n)\n\ninclude_recipe 'op5_manage'\n```\n\n```json\n{\n  \"op5_manage\": {\n    \"node\": {\n      \"hostgroups\":             { \"Web servers https\": true },\n      \"custom_variable\": {\n        \"_API_PING_TXT\":        \"OK\",\n        \"_API_PING_URL\":        \"/artifactory/api/system/ping\"\n      },\n      \"services\": {\n        \"HTTPS URL API Ping\": {\n          \"template\":           \"default-service\",\n          \"check_command\":      \"check_https_url_string\",\n          \"check_command_args\": \"\\\"$_API_PING_URL$\\\"!\\\"$_API_PING_TXT$\\\"\",\n          \"notes_url\":          \"https://intranet.mydomain.tld/Monitoring#Checks-HTTPS\",\n          \"action_url\":         \"https://$HOSTADDRESS$$_API_PING_URL$\"\n        }\n      }\n    }\n  }\n}\n```\n\n#### Host groups\n\nTypical host groups include\n\n- unix-servers\n- Windows servers\n- Generic hosts\n\nAll hostgroups are listed here:\n\nhttps://demo.op5.com/monitor/index.php/listview/?q=%5Bhostgroups%5D%20all\n\n\n### Manage other hosts from a Chef node\n\nThe host recipe is used to manage hosts which are unable to run Chef client, like routers or printers. \n\n```json\n{\n  \"run_list\": [\n    \"recipe[op5_manage::host]\"\n  ]\n}\n```\n\nUse attributes to `:create` or `:remove` hosts. Either in a recipe or in a role (with JSON).\n\n```ruby\nnode.default['op5_manage']['hosts'].merge! (\n  {\n    'op5cheftest-02.mydomain.tld' => {\n      'alias_name'    => 'op5cheftest-02',\n      'address'       => '192.168.211.27',\n      'template'      => 'default-host-template',\n      'hostgroups'    => { 'Generic hosts' => false, 'Linux servers' => true, 'Web servers https' => true },\n      'check_period'  => 'workhours',\n      'retain_info'   => true\n    },\n    'op5cheftest-03.mydomain.tld' => {\n      'alias_name'    => 'op5cheftest-03',\n      'address'       => '192.168.211.21',\n      'template'      => 'default-host-template',\n      'hostgroups'    => { 'Generic hosts' => true, 'Linux servers' => true },\n      'action'        => 'remove'\n    }\n  }\n)\n\ninclude_recipe 'op5_manage::host'\n```\n\n```json\n{\n  \"op5_manage\": {\n    \"hosts\": {\n      \"op5cheftest-02.mydomain.tld\": {\n        \"alias_name\":   \"op5cheftest-02\",\n        \"address\":      \"192.168.211.27\",\n        \"template\":     \"default-host-template\",\n        \"hostgroups\":   { \"Generic hosts\": false, \"Linux servers\": true, \"Web servers https\": false },\n        \"check_period\": \"workhours\",\n        \"retain_info\":  true\n      },\n      \"op5cheftest-03.mydomain.tld\": {\n        \"alias_name\":   \"op5cheftest-03\",\n        \"address\":      \"192.168.211.21\",\n        \"template\":     \"default-host-template\",\n        \"hostgroups\":   { \"Generic hosts\": true, \"Linux servers\": true },\n        \"action\":       \"remove\"\n      }\n    }\n  }\n}\n```\n\n\n### Manage services of other hosts from a Chef node\n\nThe service recipe is used to manage services on hosts which are unable to run Chef client, like routers or printers. \n\n```json\n{\n  \"run_list\": [\n    \"recipe[op5_manage::service]\"\n  ]\n}\n```\n\nUse attributes to `:create` or `:remove` services. Either in a recipe or in a role (with JSON).\n\n```ruby\nnode.default['op5_manage']['services'].merge! (\n  {\n    'op5cheftest-02.mydomain.tld;Test service 04' => {\n      'check_command'  => 'check_ssh_5',\n      'template'       => 'default-service',\n      'display_name'   => 'Interval 15m - Notify 15m+2m'\n    },\n    'op5cheftest-02.mydomain.tld;Test service 05' => {\n      'check_command'  => 'check_ssh_5',\n      'action'         => 'remove'\n    }\n  }\n)\n\ninclude_recipe 'op5_manage::service'\n```\n\n```json\n{\n  \"op5_manage\": {\n    \"services\": {\n      \"op5cheftest-02.mydomain.tld;Test service 04\": {\n        \"check_command\":  \"check_ssh_5\",\n        \"template\":       \"default-service\",\n        \"display_name\":   \"Interval 15m - Notify 15m+2m\"\n      },\n      \"op5cheftest-02.mydomain.tld;Test service 05\": {\n        \"check_command\":  \"check_ssh_5\",\n        \"action\":         \"remove\"\n      }\n    }\n  }\n}\n```\n\n\n### Schedule host downtimes\n\nThe host_downtime recipe schedules various kinds of host downtimes. Please refer to op5 Api documentation for details.\n\n- https://demo.op5.com/api/help/command/SCHEDULE_HOST_DOWNTIME\n- https://demo.op5.com/api/help/command/SCHEDULE_AND_PROPAGATE_HOST_DOWNTIME\n- https://demo.op5.com/api/help/command/SCHEDULE_AND_PROPAGATE_TRIGGERED_HOST_DOWNTIME\n\n```json\n{\n  \"run_list\": [\n    \"recipe[op5_manage::host_downtime]\"\n  ]\n}\n```\n\nDowntimes are defined by attributes.\n\n```ruby\nnode.default['op5_manage']['host_downtimes'].merge! (\n  {\n    'maintenance_op5cheftest-02.mydomain.tld' => {\n      'command'     => 'SCHEDULE_HOST_DOWNTIME',\n      'host_name'   => 'op5cheftest-02.mydomain.tld',\n      'start_time'  => '31.01.2018 23:00',\n      'end_time'    => '2018-01-31 23:10',\n      'fixed'       => true,\n      'duration'    => 0,\n      'trigger_id'  => 0,\n      'comment'     => 'Maintenance downtime for op5cheftest-02.mydomain.tld'\n    }\n  }\n)\n\ninclude_recipe 'op5_manage::host_downtime'\n```\n\n```json\n{\n  \"op5_manage\": {\n    \"host_downtimes\": {\n      \"maintenance_op5cheftest-01.mydomain.tld\": {\n        \"command\":      \"SCHEDULE_HOST_DOWNTIME\",\n        \"host_name\":    \"artiprod-21.mydomain.tld\",\n        \"start_time\":   \"31.01.2018 23:00\",\n        \"end_time\":     \"2018-01-31 23:10\",\n        \"fixed\":        true,\n        \"duration\":     5,\n        \"trigger_id\":   0,\n        \"comment\":      \"Maintenance downtime for op5cheftest-01.mydomain.tld\"\n      }\n    }\n  }\n}\n```\n\n#### Initial downtimes\n\nInitial downtime is part of the node recipe and can be used to schedule a host downtime for newly provisioned servers.\n To prevent it from scheduling downtimes for already existing servers, you can run this knife command to set the attribute.\n\n```\nknife exec -E \"nodes.transform('name:dbsvrpip01-04.mydomain.tld') {|n| n.normal_attrs['op5_manage']['node']['initial_downtime']['scheduled']=true  rescue nil }\"\nknife exec -E \"nodes.transform('name:dbsvrpip01-04.mydomain.tld') {|n| n.normal_attrs['op5_manage']['node'].delete('initial_downtime') rescue nil }\"\n\nknife exec -E \"nodes.transform(:all) {|n| n.normal_attrs['op5_manage']['node']['initial_downtime']['scheduled']=true  rescue nil }\"\n```\n\n\n## Troubleshoting\n\n- I recommend to use [chef_hostname](https://supermarket.chef.io/cookbooks/chef_hostname) in your run list to\n avoid inconsistent state of hostname and node['fqdn'] after provisioning.\n- If you want do remove a host, you must also remove all depending services. \n- There is an open bug on caching host_downtimes. To work around you should never change the properties of\n an existing downtime but create a new one.\n- Time and time zone must be the same on Chef node and op5 server in order to schedule downtimes.\n- Some times a downtime right after creating the host is not visible in op5 cluster. The only workaround I know is to\n `sleep(30)` between host and downtime resource.\n- Be very careful with names. In fact names of hosts, services and downtimes should avoid any special character\n expect space, dash and underscore.\n- If you are looking for an issue it's a good advice to delete the cache file (/var/lib/op5_manage/cache.json)\n or temporary disable caching (`node['op5_manage']['cache']['enabled'] = false`)\n\n\n## Attributes\n\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><tt>['endpoint']['url']</tt></td>\n    <td>String</td>\n    <td>URL of the op5 server</td>\n    <td><tt>https://demo.op5.com/api</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['endpoint']['vault_name']</tt></td>\n    <td>Symbol</td>\n    <td>Use Chef Vault to overwrite user and password.<br/>Set to vault name or nil to not use vaults.</td>\n    <td><tt>:op5_manage</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['endpoint']['vault_item']</tt></td>\n    <td>String</td>\n    <td>The item within the vault containing the endpoint credentials.</td>\n    <td><tt>endpoints</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['endpoint']['tls_verify']</tt></td>\n    <td>Bool</td>\n    <td>If tls_verify is given and set to false, TLS server certificate validation is disabled. Use with caution!</td>\n    <td><tt>true</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['endpoint']['proxy_addr']</tt></td>\n    <td>String, Nil</td>\n    <td>If not given, the ENVVAR http_proxy will be used.<br/>Set to nil (no proxy) or to valid FQDN to overwrite.</td>\n    <td><tt>nil</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['endpoint']['proxy_port']</tt></td>\n    <td>Integer, Nil</td>\n    <td>Proxy port number. Only used if proxy_addr is given.</td>\n    <td>Not given</td>\n  </tr>\n  <tr>\n    <td><tt>['endpoint']['proxy_user']</tt></td>\n    <td>String, Nil</td>\n    <td>Proxy authentication</td>\n    <td>Not given</td>\n  </tr>\n  <tr>\n    <td><tt>['endpoint']['proxy_pass']</tt></td>\n    <td>String, Nil</td>\n    <td>Proxy authentication</td>\n    <td>Not given</td>\n  </tr>\n  <tr>\n    <td><tt>['endpoint']['change_delay']</tt></td>\n    <td>Integer</td>\n    <td>Seconds to wait after a configuration change.</td>\n    <td>0</td>\n  </tr>\n  <tr>\n    <td><tt>['endpoint_auth']['user']</tt></td>\n    <td>String</td>\n    <td>Username to access the API<br/>This may be overwriten by Chef Vault</td>\n    <td><tt>op5chef-test$LDAP</tt></td>\n  </tr>\n  <tr>\n  <td><tt>['endpoint_auth']['password']</tt></td>\n    <td>String</td>\n    <td>Password to access the API<br/>This may be overwriten by Chef Vault</td>\n    <td><tt>*********</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['op5_manage']['cache']['enabled']</tt></td>\n    <td>Bool</td>\n    <td>Use caching</td>\n    <td><tt>true</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['op5_manage']['cache']['path']</tt></td>\n    <td>String</td>\n    <td>Cache file</td>\n    <td><tt>/var/lib/op5_manage/cache.json</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['op5_manage']['cache']['max_age']</tt></td>\n    <td>String</td>\n    <td>Seconds before configuration will be fetched from server again.</td>\n    <td><tt>604800</tt></td>\n  </tr>\n  <tr>\n    <td><tt>['op5_manage']['node']</tt></td>\n    <td>Hash</td>\n    <td>Manage local host</td>\n    <td><tt></tt></td>\n  </tr>\n  <tr>\n    <td><tt>['op5_manage']['hosts']</tt></td>\n    <td>Hash</td>\n    <td>Manage multiple services. See <a href=\"https://demo.op5.com/api/help/config/host\">op5 Api host manual</a> for Api methods</td>\n    <td>See host.rb attributes file</td>\n  </tr>\n  <tr>\n    <td><tt>['op5_manage']['services']</tt></td>\n    <td>Hash</td>\n    <td>Manage multiple services. See <a href=\"https://demo.op5.com/api/help/config/host\">op5 Api host manual</a> for Api methods</td>\n    <td>See service.rb attributes file</td>\n  </tr>\n  <tr>\n    <td><tt>['op5_manage']['host_downtimes']</tt></td>\n    <td>Hash</td>\n    <td>Schedule various kinds of host downtimes.</td>\n    <td>See host_downtime.rb attributes file</td>\n  </tr>\n</table>\n\n\n## License and Authors\n\nCopyright 2016 Jakob Pfeiffer (<pgp-jkp@pfeiffer.ws>)\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n",
  "maintainer": "Jakob Pfeiffer",
  "maintainer_email": "pgp-jkp@pfeiffer.ws",
  "license": "Apache-2.0",
  "platforms": {
    "centos": ">= 6.0.0",
    "redhat": ">= 6.0.0",
    "suse": ">= 11.0.0"
  },
  "dependencies": {
    "chef-vault": ">= 0.0.0"
  },
  "providing": {

  },
  "attributes": {

  },
  "recipes": {

  },
  "version": "1.0.2",
  "source_url": "https://github.com/SlashDashAndCash/op5_manage.git",
  "issues_url": "https://github.com/SlashDashAndCash/op5_manage/issues",
  "privacy": false,
  "chef_versions": [
    [
      ">= 12.14.0"
    ]
  ],
  "ohai_versions": [

  ],
  "gems": [

  ]
}
