{"name":"openstack-common","version":"16.0.0","description":"Common OpenStack attributes, libraries and recipes.","long_description":"Team and repository tags\n========================\n\n[![Team and repository tags](http://governance.openstack.org/badges/cookbook-openstack-common.svg)](http://governance.openstack.org/reference/tags/index.html)\n\n<!-- Change things from this point on -->\n\n![Chef OpenStack Logo](https://www.openstack.org/themes/openstack/images/project-mascots/Chef%20OpenStack/OpenStack_Project_Chef_horizontal.png)\n\nDescription\n===========\n\nThis cookbook provides common setup recipes, helper methods and attributes that\ndescribe an OpenStack deployment as part of the OpenStack reference deployment\nChef for OpenStack.\n\nPlease relate to the official OpenStack Configuration Reference for a more detailed documentation on operating and administration of an OpenStack cluster:\n\nhttp://docs.openstack.org/mitaka/config-reference/index.html\n\nRequirements\n============\n\n- Chef 12 or higher\n- chefdk 0.15.15 for testing (also includes berkshelf for cookbook dependency\n  resolution)\n\nPlatform\n========\n\n- ubuntu\n- redhat\n- centos\n\nCookbooks\n=========\n\nThe following cookbooks are dependencies:\n\n- 'apt', '~> 2.8'\n- 'database', '~> 4.0.2'\n- 'mariadb', '~> 0.3.1'\n- 'mysql', '~> 6.0.13'\n- 'yum', '~> 3.5.4'\n- 'yum-epel', '~> 0.6.0'\n- 'galera', '~> 0.4.1'\n\nAttributes\n==========\n\nPlease see the extensive inline documentation in `attributes/*.rb` for\ndescriptions of all the settable attributes for this cookbook.\n\nNote that all attributes are in the `default[\"openstack\"]` \"namespace\"\n\n## Attributes to generate OpenStack service configuration files\n\nSince the mitaka release, we moved to a completely new way to generate all\nOpenStack service configuration files. The base template is the\n'openstack-service.conf.erb' included in the templates of this cookbook. In each\nof the service cookbook (e.g. openstack-network, openstack-identity or\nopenstack-compute), the service configuration file (e.g neutron.conf,\nkeystone.conf or nova.conf) gets generated directly from attributes set inside of\nthe cookbook. To merge all the configuration options (including the secrets)\nproperly, before handing them over as '@service_config' to the mentioned\ntemplate above, we use the methods defined in 'libraries/config_helpers'.\n\nFor examples how to use these attributes, please refer to the attribute files\nincluded in the service cookbooks (e.g. attributes/neutron_conf.rb in\nopenstack-network or attributes/keystone_conf.rb in openstack-identity). The\nbasic structure of all these attributes always follows this model:\n\n```\n# usual config option that should evventually be saved to the node object\ndefault['openstack'][service]['conf'][section][key][value]\n# configuration options like passwords that should not be saved in the node\n# object\ndefault['openstack'][service]['conf_secrets'][section][key][value]\n```\n\nRecipes\n=======\n\n## openstack-common::client\n- Install the common python openstack client package\n\n## openstack-common::default\n- Installs/Configures common recipes\n\n## openstack-common::logging\n- Installs/Configures common logging\n\n## openstack-common::sysctl\n- Iterates over the contents of the `node['openstack']['sysctl']` hash and\n  writes the entries to `/etc/sysctl.d/60-openstack.conf`.\n\nData Bags\n=========\n\nThis cookbook contains Libraries to work with passwords and secrets in\ndatabags. Databags can be unencrypted (for dev) or encrypted (for prod).\nIn addition to traditionally encrypted data bags they can also be created as\nchef-vault items. To read more about chef-vault and how to use it, go to\nhttps://docs.chef.io/chef_vault.html.\n\nDocumentation for Attributes for selecting databag format can be found in the\nattributes section of this cookbook.\n\nDocumentation for format of these Databags can be found in the [Openstack Chef\nRepo](https://github.com/openstack/openstack-chef-repo#databags) repository.\n\nResources\n=========\n\nThis cookbook provides the openstack_common_database LWRP, which replaces the\nold database library function 'db_create_with_user'.  When this cookbook is\nincluded as dependency, this LWRP can be used to create databases needed by the\nOpenStack services.\n\n```ruby\ndepends 'openstack-common'\n```\n\n```ruby\nopenstack_common_database 'compute' do\n  service 'compute' # name_attribute\n  user 'nova'\n  pass 'supersecret'\nend\n```\n\nAn example of the usage can be seen here https://github.com/stackforge/cookbook-openstack-ops-database/blob/master/recipes/openstack-db.rb.\n\nLibraries\n=========\n\nThis cookbook exposes a set of default library routines:\n\n* `cli` -- Used to call openstack CLIs\n* `endpoint` -- Used to return a `::URI` object representing the named OpenStack\n  endpoint\n* `admin_endpoint` -- Used to return a `::URI` object representing the named\n  OpenStack admin endpoint if one was specified. Otherwise, it will return the\nsame value as `endpoint`.\n* `internal_endpoint` -- Used to return a `::URI` object representing the named\n  OpenStack internal endpoint if one was specified. Otherwise, it will return\nthe same value as `endpoint`.\n* `public_endpoint` -- Used to return a `::URI` object representing the named\n  OpenStack public endpoint if one was specified. Otherwise, it will return the\nsame value as `endpoint`.\n* `endpoints` -- Useful for operating on all OpenStack endpoints\n* `db` -- Returns a Hash of information about a named OpenStack database\n* `db_uri` -- Returns the SQLAlchemy RFC-1738 DB URI (see:\n  http://rfc.net/rfc1738.html) for a named OpenStack database\n* `secret` -- Returns the value of an encrypted data bag for a named OpenStack\n  secret key and key-section\n* `get_password` -- Ease-of-use helper that returns the decrypted password for a\n  named database, service or keystone user.\n* `matchers` -- A custom matcher(render_config_file) for testing ini format file\n  section content by with_section_content.\n\nExamples\n========\n\nThe following are code examples showing the above library routines in action.\nRemember when using the library routines exposed by this library to include\nthe Openstack routines in your recipe's `::Chef::Recipe` namespace, like so:\n\n```ruby\nclass ::Chef::Recipe\n  include ::Openstack\nend\n```\n\nExample of using the `endpoint` routine:\n\n```ruby\nnova_api_ep = endpoint \"compute-api\"\n::Chef::Log.info(\"Using Openstack Compute API endpoint at #{nova_api_ep.to_s}\")\n\n# Note that endpoint URIs may contain variable interpolation markers such\n# as `%(tenant_id)s`, so you may need to decode them. Do so like this:\n\nrequire \"uri\"\n\nputs ::URI.decode nova_api_ap.to_s\n```\n\nExample of using the `get_password` and `db_uri` routine:\n\n```ruby\ndb_pass = get_password \"db\" \"cinder\"\ndb_user = node[\"cinder\"][\"db\"][\"user\"]\nsql_connection = db_uri \"volume\", db_user, db_pass\n\ntemplate \"/etc/cinder/cinder.conf\" do\n  source \"cinder.conf.erb\"\n  owner  node[\"cinder\"][\"user\"]\n  group  node[\"cinder\"][\"group\"]\n  mode   00644\n  variables(\n    \"sql_connection\" => sql_connection\n  )\nend\n```\n\nURI Operations\n--------------\n\nUse the `Openstack::uri_from_hash` routine to helpfully return a `::URI::Generic`\nobject for a hash that contains any of the following keys:\n\n* `host`\n* `uri`\n* `port`\n* `path`\n* `scheme`\n\nIf the `uri` key is in the hash, that will be used as the URI, otherwise the URI\nwill be constructed from the various parts of the hash corresponding to the keys\nabove.\n\n```ruby\n# Suppose node hash contains the following subhash in the :identity_service key:\n# {\n#   :host => 'identity.example.com',\n#   :port => 5000,\n#   :scheme => 'https'\n# }\nuri = ::Openstack::uri_from_hash(node[:identity_service])\n# uri.to_s would == \"https://identity.example.com:5000\"\n```\n\nThe routine will return nil if neither a `uri` or `host` key exists in the\nsupplied hash.\n\nUsing the library without prefixing with ::Openstack\n----------------------------------------------------\n\nDon't like prefixing calls to the library's routines with `::Openstack`? Do this:\n\n```ruby\nclass ::Chef::Recipe\n  include ::Openstack\nend\n```\n\nin your recipe.\n\nLicense and Author\n==================\n\n|                      |                                                    |\n|:---------------------|:---------------------------------------------------|\n| **Author**           |  Jay Pipes (<jaypipes@att.com>)                    |\n| **Author**           |  John Dewey (<jdewey@att.com>)                     |\n| **Author**           |  Matt Ray (<matt@opscode.com>)                     |\n| **Author**           |  Craig Tracey (<craigtracey@gmail.com>)            |\n| **Author**           |  Sean Gallagher (<sean.gallagher@att.com>)         |\n| **Author**           |  Ionut Artarisi (<iartarisi@suse.cz>)              |\n| **Author**           |  Chen Zhiwei (<zhiwchen@cn.ibm.com>)               |\n| **Author**           |  Brett Campbell (<brett.campbell@rackspace.com>)   |\n| **Author**           |  Mark Vanderwiel (<vanderwl@us.ibm.com>)           |\n| **Author**           |  Jan Klare (<j.klare@cloudbau.de>)                 |\n| **Author**           |  Christoph Albers (<c.albers@x-ion.de>)            |\n|                      |                                                    |\n| **Copyright**        |  Copyright (c) 2012-2013, AT&T Services, Inc.      |\n| **Copyright**        |  Copyright (c) 2013, Opscode, Inc.                 |\n| **Copyright**        |  Copyright (c) 2013, Craig Tracey                  |\n| **Copyright**        |  Copyright (c) 2013-2014, SUSE Linux GmbH          |\n| **Copyright**        |  Copyright (c) 2013-2015, IBM, Corp.               |\n| **Copyright**        |  Copyright (c) 2013-2014, Rackspace US, Inc.       |\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n","maintainer":"openstack-chef","maintainer_email":"openstack-dev@lists.openstack.org","license":"Apache-2.0","platforms":{"ubuntu":">= 0.0.0","redhat":">= 0.0.0","centos":">= 0.0.0"},"dependencies":{"etcd":"~> 3.0","mariadb":"~> 1.5","memcached":"~> 4.1","mysql":"~> 8.2","poise-python":"~> 1.5","selinux":">= 0.0.0"},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{"openstack-common":"Installs/Configures common recipes","openstack-common::logging":"Installs/Configures common logging","openstack-common::sysctl":"Configures sysctl settings"},"source_url":"https://github.com/openstack/cookbook-openstack-common","issues_url":"https://launchpad.net/openstack-chef","chef_version":[[">= 12.5"]],"ohai_version":[]}