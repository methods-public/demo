{"name":"osquery","version":"1.8.1","description":"Install and configure osquery (osquery.io)","long_description":"osquery Cookbook\n====================\n[![Build Status](https://travis-ci.org/jacknagz/osquery-cookbook.svg?branch=master)](https://travis-ci.org/jacknagz/osquery-cookbook)\n[![Cookbook Version](https://img.shields.io/cookbook/v/osquery.svg)](https://supermarket.chef.io/cookbooks/osquery)\n\nThis cookbook includes recipes and resources to install, configure, and start Facebook's  [osquery](https://osquery.io/).  osquery is an operating system instrumentation framework for OS X/macOS, Windows, and Linux.\n\nSupported\n------------\n#### Platforms\n  * Ubuntu: 12.04, 14.04, 16.04\n  * Centos/Redhat: 6.5, 7.0\n  * OS X\n\n#### Chef\n  * Chef 11+\n\n#### Cookbooks\n  * [`apt`](https://github.com/chef-cookbooks/apt)\n\n#### Usage\n  * Include `osquery::default` in your node's run_list\n  * Override attributes to fit your desired setup\n\nRecipes\n-------\n#### default\nThe `default` recipe determines if a node is within the supported platform list and includes the one of the platform specific recipes to setup osquery.\n\n#### centos/ubuntu/mac_os_x\n  * Install osquery via package (rpm, deb, or pkg)\n  * Setup syslog ingestion if enabled\n  * Create configuration file(s)\n  * Start/enable osqueryd service\n\nAttributes\n----------\n##### attributes/default.rb:\nDefault attributes control the version to install, syslog configuration, and whether or not to use Facebook's Apt/Yum repo or your own internal repo.\n\n| name   | type | default | description |\n|--------|------|---------|-------------|\n| `['osquery']['version']` | `String` | `2.2.1` | osquery version to install |\n| `['osquery']['packs']` | `Array` | `%w(incident-response osx-attacks)` | packs to install |\n| `['osquery']['pack_source']` | `String` | `osquery` | cookbook to load osquery packs from |\n| `['osquery']['repo']['internal']` | `Boolean` | `false` | enable/disable the use the facebook repo |\n| `['osquery']['syslog']['enabled']` | `Boolean` | `true` | enable syslog tables |\n| `['osquery']['syslog']['filename']` | `String` | `/etc/rsyslog.d/60-osquery.conf` | syslog conf file path |\n| `['osquery']['syslog']['pipe_user']` | `String` | `root` | syslog pipe user |\n| `['osquery']['syslog']['pipe_group']` | `String` | `root` | syslog pipe group |\n\n##### attributes/config.rb:\nConfig attributes add options to the osquery config `options` key.  This includes logger plugins, config plugin, splay, worker threads, and more.\n\n| name   | type | default | description |\n|--------|------|---------|-------------|\n| `['osquery']['options']['config_plugin']` | `String` | `filesystem` | configuration plugin |\n| `['osquery']['options']['logger_plugin']` | `String` | `filesystem` | logger plugin |\n| `['osquery']['options']['schedule_splay_percent']` | `Fixnum` | `10` | query schedule splay percentage |\n| `['osquery']['options']['events_expiry']` | `Fixnum` | `3600` | timeout to expire eventing pubsub results |\n| `['osquery']['options']['verbose']` | `Boolean` | `false` | enable verbose informational messages |\n| `['osquery']['options']['worker_threads']` | `Fixnum` | `2` | number of work dispatch threads |\n| `['osquery']['options']['enable_monitor']` | `Boolean` | `false` | enable schedule monitor |\n| `['osquery']['options']['syslog_pipe_path']` | `String` | `/var/osquery/syslog_pipe_test` | syslog pipe path |\n\n##### attributes/schedule.rb:\nSchedule attributes control the main osquery query schedule.  You can add additional queries this way:\n\n```\ndefault['osquery']['schedule']['query_name'] = {\n  query: 'SELECT * FROM table_name;',\n  interval: '86400',\n  description: 'my new query'\n}\n```\n\n| name   | type | default | description |\n|--------|------|---------|-------------|\n| `['osquery']['schedule']` | `Hash` | osquery_info | osquery scheduled queries |\n\n##### attributes/file_paths.rb:\nFile integrity monitoring paths.\n\n| name   | type | default | description |\n|--------|------|---------|-------------|\n| `['osquery']['fim_enabled']` | `Boolean` | false | enable/disable file event tracking in config |\n| `['osquery']['file_paths']` | `Hash` | homes, etc, and tmp | file paths to monitor events from |\n| `['osquery']['exclude_paths']` | `Hash` | homes, etc, and tmp | file paths to ignore monitor events from (category must exist in file_paths) |\n\n##### attributes/decorators.rb:\nDecorator query options.\n\n| name   | type | default | description |\n|--------|------|---------|-------------|\n| `['osquery']['decorators']` | `Hash` | `{}` | load, always, or interval decorator queries |\n\n## Custom Resources\n##### `osquery_conf`: creates osquery config from selected options and packs\n\n* actions: `:create` or `:delete`\n* schedule: (required) Hash of scheduled queries to run\n* fim_paths: (optional) Hash of file integrity monitoring path descriptions and array of their paths\n* packs: (optional) List of osquery packs to install.  Based on filenames ending in `*.conf` in `pack_source/packs`\n* pack_source: (optional) Cookbook source for osquery packs\n* The daemon configuration is compiled from the node`['osquery']['options']` attributes.\n\n`create`:\n\n```ruby\nosquery_conf osquery_config_path do\n  action      :create\n  schedule    node['osquery']['schedule']\n  fim_paths   node['osquery']['file_paths']\n  fim_exclude_paths   node['osquery']['exclude_paths']\n  packs       node['osquery']['packs']\n  pack_source node['osquery']['pack_source']\n  decorators  node['osquery']['decorators']\nend\n```\n\n`delete`:\n\n```ruby\nosquery_conf 'delete osquery config' do\n  action :delete\nend\n```\n\n##### `osquery_install`: installs osquery on centos/redhat, ubuntu, or os x\n\n* actions:\n  * `:install_ubuntu`, `:install_centos`, `:install_os_x`\n  * `:remove_ubuntu`, `:remove_centos`, `:remove_os_x`\n* version: (required - name attribute) string of the osquery version to install\n\n`install`:\n\n```ruby\nosquery_install node['osquery']['version'] do\n  action :install_ubuntu\nend\n```\n\n`remove`:\n\n```ruby\nosquery_install node['osquery']['version'] do\n  action :remove_ubuntu\nend\n```\n\n##### `osquery_syslog`: creates osquery syslog config file\n\n* actions: `:create` or `:delete`\n* syslog_file: (required - name attribute) filename of the osquery syslog config\n* pipe_filter: the filter expression for routing events into the syslog pipe\n* pipe_path: the fifo pipe path\n* note: this resource installs rsyslog if not already configured\n\n`install`:\n\n```ruby\nosquery_syslog node['osquery']['syslog']['filename'] do\n  pipe_filter node['osquery']['syslog']['pipe_filter']\n  pipe_path   node['osquery']['options']['syslog_pipe_path']\n  action      :create\n  only_if     { node['osquery']['syslog']['enabled'] }\n  notifies    :restart, \"service[#{osquery_daemon}]\"\nend\n```\n\n`delete`:\n\n```ruby\nosquery_syslog node['osquery']['syslog']['filename'] do\n  action   :delete\n  notifies :restart, \"service[#{osquery_daemon}]\"\nend\n```\n\nTesting\n-----\nRun `rake` to execute:\n* foodcritic\n* rubocop\n* chefspec\n\nRun `kitchen verify` to run Inspec integration tests\n* Requirements: VirtualBox with Extension Pack (for the OS X vm)\n\nContributing\n------------\n1. Fork the repository on Github.\n2. Create a named feature branch (like `add_component_x`).\n3. Write your change.\n4. Write tests for your change.\n5. Run the tests, ensuring they all pass (`rubocop; rspec`).\n6. Submit a Pull Request using Github.\n\nLicense and Authors\n-------------------\n* Authors: Jack Naglieri (jacknagzdev@gmail.com)\n\n```text\nCopyright 2013-2014 Jack Naglieri <jacknagzdev@gmail.com>\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n","maintainer":"Jack Naglieri","maintainer_email":"jacknagzdev@gmail.com","license":"Apache 2.0","platforms":{"ubuntu":">= 0.0.0","centos":">= 0.0.0","redhat":">= 0.0.0","mac_os_x":">= 0.0.0"},"dependencies":{"apt":">= 0.0.0"},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{"osquery::default":"convergence/audit requirements.","osquery::centos":"centos/redhat osquery installation.","osquery::mac_os_x":"mac os x osquery installation.","osquery::ubuntu":"ubuntu osquery installation.","osquery::audit":"chef audits for osquery installation."}}