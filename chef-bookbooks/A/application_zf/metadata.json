{
  "name": "application_zf",
  "description": "Installs/Configures ZendSkeletonApplication",
  "long_description": "# Description\n\nThis cookbook installs and configures Zend Skeleton Application according to\nthe instructions at https://github.com/zendframework/ZendSkeletonApplication\n\n## Requirements\n\nThis project is platform independent `application_zf::install_skeleton`.\n\nThe recipe `application_zf::default` install a typical system (Apache2 - PHP5 - ZF Skeleton).\n\n### Platform\n\n * Debian\n * Ubuntu\n * Rhel     (not tested)\n * Fedora   (not tested)\n * CentOS   (not tested)\n\n### Cookbooks\n\n * apt\n * yum\n * build-essential\n * php\n * apache2\n * openssl\n\n## Attributes\n\n* `node['zf']['version']` - Set the version (Skeleton) to download. Using 'latest' (the default) will install the most current version.\n* `node['zf']['dir']` - Set the location to place zend skeleton application files. Default is `/var/www`.\n* `node['zf']['server_aliases']` - Array of ServerAliases used in apache vhost. Default is `[node['fqdn']]`.\n* `node['zf']['modules']` - Array of Module names that you want to enable in your `application.config.php`\n* `node['zf']['composer']['packages']` - Array of composer modules to install see dedicated section\n* `node['zf']['dev']['version']` - Set the version of `ZendDeveloperTools` module. Default is `dev-master`\n* `node['zf']['skeleton']['repository']` - Repository used to download Skeleton App. Default is `https://github.com/zendframework/ZendSkeletonApplication)`\n* `node['zf']['deploy']['modules']['git']` - Array of git zf2 module repositories that you want to deploy\n\n## Getting Started\n\nThis group of recipes install and configure a Zend Framework Standard Skeleton\napplication or something based on it.\n\nEssentially you have to use the `application_zf::default` to install a standard\nsystem (Apache2 + PHP + ZendFramework/SkeletonApplication). If you prefer, you\ncan use single recipes in order to create your personal infrastructure.\n\n## Deploy cycles\n\n * `application_zf::deploy_git_modules`\n    * Deploy your git modules in `module` folder\n * `application_zf::deploy_composer_packages`\n    * Deploy composer packages `vendor` folder\n * `application_zf::deploy_modules_list`\n    * Deploy your module list `application.config.php` configuration file\n\n## Example of usage in Vagrant\n\n    # ...\n    config.vm.provision :chef_solo do |chef|\n    # ...\n    chef.add_recipe \"application_zf\"\n        chef.json = {\n            :zf => {\n                :version => 'zf/release-2.1.0',\n                :server_aliases => 'my.local'\n            }\n        }\n    end\n    # ...\n\n### Vagrant, develop your module using shared folders\n\nAlways is your `Vagrantfile`\n\n    config.vm.share_folder(\"my-name-module\", \"/var/www/zend/module/MyNameModule\", \"../MyNameModule\")\n\n## Add your module in the configuration\n\n    chef.json = {\n        :zf => {\n            :modules => [\n                \"Application\",\n                \"MyNameModule\"\n            ],\n    # ...\n\nTo update your module list you have to use the `application_zf::deploy_module_list`\n\n## Add third parties libraries with Composer\n\nYou can use the\n\n    chef.json = {\n        :zf => {\n            :modules => [\n                \"Application\",\n                \"ZfcBase\",\n                \"ZfcUser\"\n            ],\n            :composer => {\n                :packages => [\n                    {\n                        :version => \"0.1.*\",\n                        :name => \"zf-commons/zfc-user\"\n                    }\n                ]\n            }\n        }\n    }\n\nTo deploy your additional composer packages you have to use `application_zf::deploy_composer_packages`\n\n## Deploy your modules\n\nIf you want to deploy your module you have to add the `application_zf::deploy_module_git` recipe.\n\n    chef.json = {\n        :zf => {\n            :deploy => {\n                :modules => {\n                    :git => [\n                        {\n                            :name => \"YourDevModule\",\n                            :uri => \"http://github.com/username/YourDevModule.git\",\n                            :branch => \"master\"\n                        }\n                    ]\n                }\n            }\n        }\n    }\n\nThe `branch` key, is in fact the `revision`, for that reason you can also use a\ngit commit id.\n\nTo deploy your additional module you have to use `application_zf::deploy_module_git`\n\n## ZendDeveloperTools integration\n\nIf want to enable the Zend Developer Tools you can add `application_zf::dev_tools` in your\nconfiguration\n\n    chef.add_recipe \"application_zf::dev_tools\"\n\nAnd remember to add the `ZendDeveloperTools` in your module list\n\n    chef.json = {\n        :zf => {\n            :modules => [\n                \"ZendDeveloperTools\",\n                \"Application\"\n            ]\n        }\n    }\n\n### Tune the ZendDeveloperTools version\n\nSet the `dev` version\n\n    node['zf']['dev']['version'] = \"dev-master\"\n\n### Add Zend\\Db profiler\n\nIs simple, add the `bjyoungblood/BjyProfiler` package\n\n    :composer => {\n        :packages =>[\n            {\n                :version => \"dev-master\",\n                :name => \"bjyoungblood/BjyProfiler\"\n            }\n        ]\n    }\n\nAnd also enable module `BjyProfiler` after `ZendDeveloperTools`\n\n    :modules => [\n        \"ZendDeveloperTools\",\n        \"BjyProfiler\"\n\n",
  "maintainer": "Walter Dal Mut",
  "maintainer_email": "walter.dalmut@gmail.com",
  "license": "Apache 2.0",
  "platforms": {
    "debian": ">= 0.0.0",
    "ubuntu": ">= 0.0.0",
    "centos": ">= 0.0.0",
    "fedora": ">= 0.0.0",
    "rhel": ">= 0.0.0"
  },
  "dependencies": {
    "php": ">= 0.0.0",
    "openssl": ">= 0.0.0",
    "build-essential": ">= 0.0.0",
    "apt": ">= 0.0.0",
    "apache2": ">= 0.99.4"
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
    "application_zf/zf/version": {
      "display_name": "ZendSkeletonApplication download version",
      "description": "Version of ZendSkeletonApplication to download from the ZendSkeletonApplication site or 'latest' for the current release.",
      "default": "latest",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "application_zf/zf/dir": {
      "display_name": "ZendSkeletonApplication installation directory",
      "description": "Location to place ZendSkeletonApplication files.",
      "default": "/var/www/zend",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "application_zf/zf/server_aliases": {
      "display_name": "ZendSkeletonApplication Server Aliases",
      "description": "ZendSkeletonApplication Server Aliases",
      "default": [
        "FQDN"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "application_zf/zf/modules": {
      "display_name": "ZendSkeletonApplication Enable modules",
      "description": "Array of Module names that you want to enable in your application.config.php",
      "default": [
        "Application"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "application_zf/zf/composer/packages": {
      "display_name": "ZendSkeletonApplication extra composer packages",
      "description": "Array of Module names that you want to enable in your application.config.php",
      "default": [

      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "application_zf/zf/dev/version": {
      "display_name": "ZendDeveloperTools version",
      "description": "Set the version of ZendDeveloperTools module",
      "default": "dev-master",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "application_zf/zf/deploy/modules/git": {
      "display_name": "Deploy git based modules",
      "description": "Add a new module using git strategy",
      "default": [

      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    }
  },
  "groupings": {
  },
  "recipes": {
    "application_zf::default": "Installs and configures Zend Skeleton Application on a single system using also apache2 recipe",
    "application_zf::install": "Install and configures Zend Skeleton Application without web server suppport",
    "application_zf::dev_tools": "Install ZendDeveloperTools"
  },
  "version": "0.4.0"
}