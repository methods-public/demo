{
  "name": "summary_handlers",
  "description": "Installs/Configures some handlers that summerise the Chef run in terms of Resource and Recipe",
  "long_description": "summary-handlers Cookbook\n=========================\nThis cookbook includes three report handlers.\n\n## Cookbook Summary\nThe cookbook summary is a list of cookbooks that have been pulled down as part of the run list (or dependencies).\n\n## Recipe Summary\nThe recipe summary is designed for situations for helping to see if a community cookbook has been added as a dependency but no longer required as it lists all recipes and marks those that have not been loaded.\n\n## Resource Summary\nThe resource summary is for larger cookbooks with a lot of resources to summerise the resources that have been loaded into the resource queue. The report has two modes, output the resources grouped by type or by cookbook recipe. \nThere are two sorting options\n* By Type; the output is resource type followed by recipe name\n* By Cookbook; the output is recipe name followed by resources\n\nThe overall intention of the summary handlers is for development time using Test Kitchen, not production but it could be added as part of a regular run list.\n\nOutput is using puts rather than Chef::Log, if you fork and change the code to use Chef::Log and there is no output check your Log level!\n\nIf the cookbook proves to be popular I will distribute the core as a gem to make it even easier to install and use!\n\nRequirements\n------------\n* ChefDK, can be found here https://downloads.chef.io/chef-dk/ \n* Vagrant\n* Virtual Box\n* Windows/Linux box file\n* Cookbook to add the summary handlers to\n\nTested with ChefDK 0.62\n\nAttributes\n----------\n#### summary-handlers::default\n Key                                                | Type    | Description                                    | Default        \n----------------------------------------------------|---------|------------------------------------------------|---------\n`['summary-handlers']['cookbook-summary-report']`   | boolean | If default recipe called add cookbook-summary  | `true`\n`['summary-handlers']['recipe-summary-report']`     | boolean | If default recipe called add recipe-summary    | `true`\n`['summary-handlers']['resource-summary-report']`   | boolean | If default recipe called add resource-summary  | `true`\n\n#### summary-handlers::resource_summary\nNB: Key is abbreviated, the key path starts with ['summary-handlers']['resource-summary']\nSimple add below for full attribute name, i.e ['summary-handlers']['resource-summary']['report_type']\n\n Key                  | Type    | Description                  | Default        \n ---------------------|---------|------------------------------|----------------\n`['report_type']`     | Symbol  | :by_cookbook or :by_type     | :by_cookbook\n`['report_format']`   | Symbol  | :template, :json or :yaml    | :template\n`['updated_only']`    | boolean | Show only updated resources  | false\n`['user_filter']`     | Proc    | Proc for user filter         | nil\n\n\nThe user_filter will allow you to filter resource summary to just the resources you are interested in, the filter can be any valid resouce property.\n\nExample setting for \ndefault['summary-handlers']['resource-summary']['user_filter'] = proc {|resource| resource.method == user_criteria}\n\nThis setting will need to be done in your wrapper cookbook attributes or recipe file as it requires Ruby proc.\n\nUsage\n-----\nIf using Test Kitchen and Berkshelf then add to your Berksfile, summary_handlers is available on Git or Public Chef Supermarket.\n\nGit\n````\ncookbook 'summary_handlers', git: 'https://github.com/chrisgit/chef-summary_handlers'\n````\n\nPublic Supermarket\n````\nsource 'https://supermarket.chef.io'\n\nmetadata\n\ncookbook 'summary_handlers'\n````\n\nChange you test suite run list to include summary handlers (.kitchen.yml or .kitchen.local.yml)\n````\nsuites:\n- name: default\n  run_list: [\"recipe[summary_handlers]\",\"recipe[my_cookbook]\"]\n  attributes: { ... }\n````\n\nUse the attributes section of the test suite to get the desired behavior.\n\nAlternatively, you can add this cookbook as a dependency in your cookbook, to do that update your cookbooks metadata file\n````\ndepends 'summary_handlers'\n````\n\nThen add an include_recipe in default.rb (or one of the recipes used by your cookbook)\n````\ninclude_recipe 'summary_handlers\n````\n\nContributing\n------------\nPlease see [CONTRIBUTING.md][contributor] and read the [CODE_OF_CONDUCT.md][conduct]\n\nLicense and Authors\n-------------------\nPlease see [LICENSE][licence]\nAuthors: Chris Sullivan\n\n[contributor]: https://github.com/chrisgit/chef-summary_handlers/blob/master/CONTRIBUTING.md\n[conduct]: https://github.com/chrisgit/chef-summary_handlers/blob/master/CODE_OF_CONDUCT.md\n[licence]: https://github.com/chrisgit/chef-summary_handlers/blob/master/LICENSE",
  "maintainer": "Chris Sullivan",
  "maintainer_email": "n/a",
  "license": "MIT",
  "platforms": {
    "centos": ">= 0.0.0",
    "windows": ">= 0.0.0"
  },
  "dependencies": {
    "chef_handler": ">= 0.0.0"
  },
  "recommendations": {

  },
  "suggestions": {

  },
  "conflicting": {

  },
  "providing": {

  },
  "replacing": {

  },
  "attributes": {

  },
  "groupings": {

  },
  "recipes": {
    "summary_handlers": "Default recipe, will include recipe_summary and resource_summary if the appropriate attributes set.",
    "summary_handlers::cookbook_summary": "Will add a handler to provide a cookbook summary at the end of the Chef run.",
    "summary_handlers::recipe_summary": "Will add a handler to provide a recipe summary at the end of the Chef run.",
    "summary_handlers::resource_summary": "Will add a handler to provide a resource summary at the end of the Chef run."
  },
  "version": "0.3.0",
  "source_url": "https://github.com/chrisgit/chef-summary_handlers",
  "issues_url": "https://github.com/chrisgit/chef-summary_handlers/issues",
  "privacy": false,
  "chef_versions": [
    [
      "~> 12"
    ]
  ],
  "ohai_versions": [

  ],
  "gems": [

  ]
}
