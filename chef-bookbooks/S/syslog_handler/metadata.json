{
  "name": "syslog_handler",
  "description": "Installs/Configures syslog_handler",
  "long_description": "syslog_handler Cookbook\n=======================\n\nReport and Error handler for Opscode Chef to log the basic essential information.\n\nExample output from an example syslog log file:\n\n```\nAug  2 17:04:05 web33-x9 chef[13072]: status=success total_resources=171 updated_resources=6 elapsed_time=117.646907\n```\n\nBased roughly on the `graphite_handler` code from Ian Meyer, Peter Donald, et al.\n\nRequirements\n------------\n\nAs usual for handlers, the [chef_handler](http://community.opscode.com/cookbooks/chef_handler) cookbook is mandatory (it must be able to be referenced, so in the Chef Server case, it must be uploaded to the server).\n\nAttributes\n----------\n\n* `['chef_client']['handler']['syslog']['identity']` : Syslog lines show as this identity. Type: String. Defaut: `'chef'`.\n\n* `['chef_client']['handler']['syslog']['facility']` : Syslog under this syslog facility. Type: Ruby variable (constant from `Syslog::Constants`). Default: `Syslog::LOG_DAEMON`\n\n* `['chef_client']['handler']['syslog']['fail_priority']` : Syslog as this priority on Chef run failure.  Type: Ruby variable (constant from `Syslog::Constants`). Default: `Syslog::LOG_ERR`\n\n* `['chef_client']['handler']['syslog']['success_priority']` : Syslog as this priority on Chef run success. Type: Ruby variable (constant from `Syslog::Constants`). Default: `Syslog::LOG_INFO`\n\nUsage\n-----\n\nJust include `syslog_handler` very early (if not first) in your node's `run_list`:\n\n```json\n{\n  \"name\":\"my_node\",\n  \"run_list\": [\n    \"recipe[syslog_handler]\"\n  ]\n}\n```\n\nContributing\n------------\n\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write your change\n4. Submit a Pull Request using Github\n\nLicense and Authors\n-------------------\n\nThe MIT License (MIT)\n\nCopyright (c) 2013-2014 Charles J Blaine\n\nContributions by: Sergio Rodriguez, \"laistu\" on GitHub, Olivier Bazoud\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "maintainer": "Jeff Blaine",
  "maintainer_email": "jblaine@kickflop.net",
  "license": "MIT",
  "platforms": {
    "redhat": ">= 0.0.0",
    "centos": ">= 0.0.0",
    "fedora": ">= 0.0.0",
    "freebsd": ">= 0.0.0",
    "openbsd": ">= 0.0.0",
    "amazon": ">= 0.0.0",
    "ubuntu": ">= 0.0.0",
    "debian": ">= 0.0.0",
    "solaris2": ">= 0.0.0"
  },
  "dependencies": {
    "chef_handler": ">= 0.0.0"
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
  },
  "groupings": {
  },
  "recipes": {
  },
  "version": "0.1.8"
}