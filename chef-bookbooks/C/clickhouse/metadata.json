{
  "name": "clickhouse",
  "description": "Installs/Configures chef-clickhouse",
  "long_description": "# chef-clickhouse\n\n[![Build Status](https://travis-ci.org/ernestas-poskus/chef-clickhouse.svg?branch=master)](https://travis-ci.org/ernestas-poskus/chef-clickhouse)\n[![Cookbook Version](https://img.shields.io/cookbook/v/clickhouse.svg)](https://supermarket.chef.io/cookbooks/clickhouse)\n\nInstalls and manages ClickHouse server instances.\n\n## Requirements\n\n- Chef 12.5 or higher\n- Network accessible package repositories\n- Zookeeper (optional) only for distributed mode\n\n## Attributes\n\n```ruby\ndefault['clickhouse']['user'] = 'clickhouse'\ndefault['clickhouse']['group'] = 'clickhouse'\n\ncase node['platform']\nwhen 'rhel', 'centos'\n  default['clickhouse']['server']['version'] = '1.1.54362'\nwhen 'ubuntu', 'debian'\n  default['clickhouse']['server']['version'] = '1.1.54343'\nend\n\n# Override config.xml Chef template resource `cookbook` location.\n# Useful in wrapping cookbooks.\ndefault['clickhouse']['server']['configuration']['cookbook'] = 'clickhouse'\n\n# Override users.xml Chef template resource `cookbook` location.\n# Useful in wrapping cookbooks.\ndefault['clickhouse']['server']['users']['cookbook'] = 'clickhouse'\n\n# Override zookeeper-servers.xml Chef template resource `cookbook` location.\n# Useful in wrapping cookbooks.\ndefault['clickhouse']['server']['zookeeper']['cookbook'] = 'clickhouse'\n\n# Override macros.xml Chef template resource `cookbook` location.\n# Useful in wrapping cookbooks.\ndefault['clickhouse']['server']['macros']['cookbook'] = 'clickhouse'\n\n# Override macros.xml Chef template resource `cookbook` location.\n# Useful in wrapping cookbooks.\ndefault['clickhouse']['server']['remote_servers']['cookbook'] = 'clickhouse'\n```\n\nAlso:\n - defaults/server.rb\n - defaults/users.rb\n - defaults/packages.rb\n\n## Usage\n\nPlace a dependency on the mysql cookbook in your cookbook's metadata.rb\n\n```ruby\ndepends 'clickhouse'\n```\n\nThere are two ways to install ClickHouse.\n\n  1. By including recipe\n  ```ruby\n  include_recipe 'clickhouse::server'\n  ```\n  2. By using Chef resources, note service_name here, it must be same\n  per configured ClickHouse service instance.\n  ```ruby\n  clickhouse_server_service 'clickhouse server instance' do\n    service_name 'clickhouse-server-test'\n  end\n\n  clickhouse_macros_config 'clickhouse server macros config' do\n    service_name 'clickhouse-server-test'\n    config '<macros></macros>'\n  end\n\n  clickhouse_remote_servers_config 'clickhouse remote servers config' do\n    service_name 'clickhouse-server-test'\n    config '<remote_servers></remote_servers>'\n  end\n\n  clickhouse_zookeeper_config 'clickhouse server zookeeper config' do\n    service_name 'clickhouse-server-test'\n    nodes [\n      { host: '127.0.0.1', port: 2181 }\n    ]\n  end\n  ```\n\n## Resources Overview\n\n### clickhouse_server_service\n\nThe `clickhouse_server_service` resource manages ClickHouse server installation.\n\nThe `:create` action handles package installation, support directories and other operating system level concerns.\nThe internal configuration file contains just enough to get the service up and running.\n\n##### Example\n\n```ruby\nclickhouse_server_service 'custom instance' do\n  version '1.1.54362'\nend\n```\n\nPlease note that when using `notifies` or `subscribes`, the resource to reference is `clickhouse_server_service[custom instance]`, not `service[custom instance]`.\n\n##### Parameters\n\n- `user` - operating system user to run ClickHouse\n- `group` - operating system group to run ClickHouse\n- `config_dir` - configuration namespace directory, default is /etc/clickhouse-server/{custom instance}\n- `version` - specifies ClickHouse package version\n- `package_release` - package release, usually relevant for RHEL, e.g.: el6, el7\n- `bin_dir` - where to look for ClickHouse server binary\n- `generic_bin` - ClickHouse generic bin, default is `clickhouse` used for config.xml template validation\n- `server_bin` - ClickHouse server binary name, default is `clickhouse-server`\n- `config` - given configuration of `config.xml`, default is `node['clickhouse']['server']['config']`\n- `users` - given configuration of `config.xml`, `users.xml` include, default is `node['clickhouse']['server']['users']`\n- `service_name` - defaults to `clickhouse-server`\n- `service_provider` - accepts symbol and controls service file flavor, for `poise_service`, defaults to: `:systemd` or `sysvinit` depending on availability\n- `config_template_cookbook` - template cookbook source, defaults to `node['clickhouse']['server']['configuration']['cookbook']`\n- `users_template_cookbook` - template cookbook source, defaults to `node['clickhouse']['server']['users']['cookbook']`\n- `config_template_source` - template cookbook source, defaults to `config.xml.erb`\n- `users_template_source` - template cookbook source, defaults to `users.xml.erb`\n\n##### Actions\n\n- `:create` - Configures everything from repository, package to service.\n- `:delete` - Removes everything but the package and directories.\n\n### clickhouse_macros_config\n\nThe `clickhouse_macros_config` resource manages ClickHouse server macros for ClickHouse server.\n\nThe `:create` action macros file installation.\n\n##### Example\n\n```ruby\nclickhouse_macros_config 'custom instance' do\n  service_name 'clickhouse-server-your-service'\n  config '<macros></macros>'\nend\n```\n\nPlease note that when using `notifies` or `subscribes`, the resource to reference is `clickhouse_macros_config[custom instance]`, not `service[custom instance]`.\n\n##### Parameters\n\n- `user` - operating system user to run ClickHouse\n- `group` - operating system group to run ClickHouse\n- `config_dir` - configuration namespace directory, default is /etc/clickhouse-server/{custom instance}\n- `service_name` - defaults to `clickhouse-server`\n- `config_name` - defaults to `node['clickhouse']['server']['config']['macros']['incl']`\n- `config` - whatever is passed here is reflected in 'macros.xml'\n- `template_cookbook` - template cookbook source, defaults to `node['clickhouse']['server']['macros']['cookbook']`\n- `template_source` - template cookbook source, defaults to `macros.xml.erb`\n\n##### Actions\n\n- `:create` - Installs macros.xml configuration file\n- `:delete` - Removes macros.xml configuration file\n\n### clickhouse_zookeeper_config\n\nThe `clickhouse_zookeeper_config` resource manages ClickHouse server Zookeeper servers for ClickHouse server instance.\n\nThe `:create` action zookeeper file installation.\n\n##### Example\n\n```ruby\nclickhouse_zookeeper_config 'custom instance' do\n  service_name 'clickhouse-server-custom'\n  nodes [\n    { host: '127.0.0.1', port: 2181 }\n  ]\nend\n```\n\nPlease note that when using `notifies` or `subscribes`, the resource to reference is `clickhouse_zookeeper_config[custom instance]`, not `service[custom instance]`.\n\n##### Parameters\n\n- `user` - operating system user to run ClickHouse\n- `group` - operating system group to run ClickHouse\n- `config_dir` - configuration namespace directory, default is /etc/clickhouse-server/{custom instance}\n- `service_name` - defaults to `clickhouse-server`\n- `config_name` - defaults to `node['clickhouse']['server']['config']['macros']['incl']`\n- `nodes` - expects Array of Hash 'es, e.g.: `[{index: 1, host: 'localhost', port: 2181}]`\n- `template_cookbook` - template cookbook source, defaults to `node['clickhouse']['server']['zookeeper']['cookbook']`\n- `template_source` - template cookbook source, defaults to `zookeeper.xml.erb`\n\n##### Actions\n\n- `:create` - Installs zookeeper-servers.xml configuration file\n- `:delete` - Removes zookeeper-servers.xml configuration file\n\n### clickhouse_remote_servers_config\n\nThe `clickhouse_remote_servers_config` resource manages ClickHouse server macros for ClickHouse server.\n\nThe `:create` action macros file installation.\n\n##### Example\n\n```ruby\nclickhouse_remote_servers_config 'custom instance' do\n  service_name 'clickhouse-server-your-service'\n  config '<remote_servers></remote_servers>'\nend\n```\n\nPlease note that when using `notifies` or `subscribes`, the resource to reference is `clickhouse_remote_servers_config[custom instance]`, not `service[custom instance]`.\n\n##### Parameters\n\n- `user` - operating system user to run ClickHouse\n- `group` - operating system group to run ClickHouse\n- `config_dir` - configuration namespace directory, default is /etc/clickhouse-server/{custom instance}\n- `service_name` - defaults to `clickhouse-server`\n- `config_name` - defaults to `node['clickhouse']['server']['config']['macros']['incl']`\n- `config` - whatever is passed here is reflected in 'clickhouse_remote_servers.xml'\n- `template_cookbook` - template cookbook, defaults to `node['clickhouse']['server']['remote_servers']['cookbook']`\n- `template_source` - template cookbook source, defaults to `remote_servers.xml.erb`\n\n##### Actions\n\n- `:create` - Installs clickhouse_remote_servers.xml configuration file\n- `:delete` - Removes clickhouse_remote_servers.xml configuration file\n\n### clickhouse_custom_config\n\nThe `clickhouse_custom_config` resource manages ClickHouse server custom xml or any other file configuration for ClickHouse server.\n\nThe `:create` action macros file installation.\n\n##### Example\n\n```ruby\nclickhouse_custom_config 'custom instance' do\n  service_name 'clickhouse-server-your-service'\n  config 'your value'\n  config_name 'test-custom.xml'\nend\n```\n\nPlease note that when using `notifies` or `subscribes`, the resource to reference is `clickhouse_custom_config[custom instance]`, not `service[custom instance]`.\n\n##### Parameters\n\n- `user` - operating system user to run ClickHouse\n- `group` - operating system group to run ClickHouse\n- `config_dir` - configuration namespace directory, default is /etc/clickhouse-server/{custom instance}\n- `service_name` - defaults to `clickhouse-server`\n- `config_name` - defaults to `custom.xml`\n- `config` - whatever is passed here is reflected in 'custom.xml' or whatever what is provided in `config_name`\n- `template_cookbook` - template cookbook, defaults to `clickhouse`\n- `template_source` - template cookbook source, defaults to `custom.xml.erb`\n\n##### Actions\n\n- `:create` - Installs custom.xml configuration file\n- `:delete` - Removes custom.xml configuration file\n\n## Manual tuning\n\nCPU frequency tunning\n```\nsudo echo 'performance' | tee /sys/devices/system/cpu/cpu\\*/cpufreq/scaling_governor\n```\n\nDisable huge pages\n```\necho 'never' | sudo tee /sys/kernel/mm/transparent_hugepage/enabled\n```\n\n## Production architecture\n\nhttps://github.com/yandex/ClickHouse/issues/1272\n\n## License\n\n```text\nMIT License\n\nCopyright (c) 2018 Ernestas Poskus\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n```\n",
  "maintainer": "Ernestas Poskus",
  "maintainer_email": "ernestas.poskus@gmail.com",
  "license": "MIT",
  "platforms": {
    "redhat": ">= 0.0.0",
    "centos": ">= 0.0.0",
    "ubuntu": ">= 0.0.0",
    "debian": ">= 0.0.0"
  },
  "dependencies": {
    "poise": "~> 2.8.1",
    "poise-service": "~> 1.5.2",
    "ulimit": "~> 1.0.0"
  },
  "providing": {

  },
  "attributes": {

  },
  "recipes": {

  },
  "version": "0.4.0",
  "source_url": "https://github.com/ernestas-poskus/chef-clickhouse",
  "issues_url": "https://github.com/ernestas-poskus/chef-clickhouse/issues",
  "privacy": false,
  "chef_versions": [
    [
      ">= 12.5"
    ]
  ],
  "ohai_versions": [

  ],
  "gems": [

  ]
}
