{
  "name": "conjur-host-identity",
  "description": "Obtains and installs the Conjur host identity from Chef attributes",
  "long_description": "# Description\n\nCreates and installs Conjur host identity using Chef attributes and the Conjur \n[host factory](http://developer.conjur.net/reference/services/host_factory).\n\n## Attributes\n\nSee the Chef metadata.rb for detailed information about the attributes used by this recipe.\n\nBasically, you should populate Chef attributes which configure the connection to Conjur:\n\n* Appliance URL\n* Organization account name\n* SSL certificate\n\nThe cookbook will auto-detect a SSL certificate at `/etc/conjur-#{account}.pem`.\n\nYou also need to provide two other pieces of information:\n\n* Host factory token.\n* Id for the host. You can use some data from OHAI (such as the AWS instance id), or the Chef node name,\nor whatever you like. It needs to be unique across your Conjur system.\n\n## Conjur gem installation\n\nThe Conjur API and Conjur CLI gems are installed by [chef_gem](https://docs.getchef.com/resource_chef_gem.html). \nTherefore they can be used in any other subsequent cookbook as well.\n\nThis is very handy for fetching secrets from Conjur. You can find an example in our\n[asgard config](https://github.com/conjurdemos/chef-asgard-config/blob/master/recipes/default.rb) demo cookbook.\n\n## Conjur configuration\n\nThis cookbook builds `/etc/conjur.conf` from the Conjur connection information. This configuration will be used\nby all the downstream Conjur functionality.\n\nFile permissions are `0644`.\n\n## Conjur host identity\n\nThis cookbook looks for a host identity in `/etc/conjur.identity`. If that file exists, it's left intact.\n\nIf it doesn't exist, the host factory token is used to provision a new host identity, which is then saved to the file.\nFile permissions are `0600`.\n\nThe `netrc_path` entry in `conjur.conf` points to `/etc/conjur.identity`. Therefore, downstream Conjur tools such as the\nConjur CLI will automatically pick up the host identity from this file and use it.\n\n# Testing\n\nOnce the cookbook has run, you can verify the host identity by running `conjur authn whoami`. For example:\n\n    # /opt/chef/embedded/bin/conjur authn whoami\n    {\"account\":\"demo\",\"username\":\"host/kgilpin@spudling.local/chef-tutorial-1-0/vagrant/ff849c12-95d7-4720-9fb7-2c2be88582f7\"}\n",
  "maintainer": "Conjur, Inc.",
  "maintainer_email": "kgilpin@conjur.net",
  "license": "MIT",
  "platforms": {
    "debian": ">= 0.0.0",
    "ubuntu": ">= 0.0.0",
    "centos": ">= 0.0.0",
    "fedora": ">= 0.0.0"
  },
  "dependencies": {

  },
  "recommendations": {

  },
  "suggestions": {

  },
  "conflicting": {

  },
  "providing": {

  },
  "replacing": {

  },
  "attributes": {
    "conjur/host_factory_token": {
      "description": "Conjur host factory token used to create the host identity.",
      "required": "required",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "recipes": [

      ]
    },
    "conjur/host_identity/id": {
      "description": "Identity which will be assigned to the new host.",
      "required": "required",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "recipes": [

      ]
    },
    "conjur/configuration/appliance_url": {
      "description": "URL of the Conjur service, for example https://conjur/api.",
      "required": "required",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "recipes": [

      ]
    },
    "conjur/configuration/account": {
      "description": "Conjur organization account name",
      "required": "required",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "recipes": [

      ]
    },
    "conjur/configuration/ssl_certificate": {
      "description": "SSL certificate of the Conjur service. Substitute line breaks with the \n newline character.",
      "required": "required",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "recipes": [

      ]
    },
    "conjur/configuration_file": {
      "description": "Alternate location for the Conjur configuration file. Default is /etc/conjur.conf",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    },
    "conjur/configuration/netrc_path": {
      "description": "Alternate location for the Conjur login cache. Default is /etc/conjur.identity",
      "choice": [

      ],
      "calculated": false,
      "type": "string",
      "required": "optional",
      "recipes": [

      ]
    }
  },
  "groupings": {

  },
  "recipes": {

  },
  "version": "1.0.2",
  "source_url": "",
  "issues_url": ""
}
