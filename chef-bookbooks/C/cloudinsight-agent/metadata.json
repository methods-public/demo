{
  "name": "cloudinsight-agent",
  "description": "Installs/Configures cloudinsight-agent components",
  "long_description": "cloudinsight-agent Cookbook\n================\n\nChef recipes to deploy cloudinsight-agent and configuration automatically.\n\nRequirements\n============\n- chef >= 10.14\n\nPlatforms\n---------\n\n* Amazon Linux\n* CentOS\n* Debian\n* RedHat\n* Scientific Linux\n* Ubuntu\n\nCookbooks\n---------\n\nThe following Opscode cookbooks are dependencies:\n\n* `apt`\n* `chef_handler`\n* `yum`\n\n\nRecipes\n=======\n\ndefault\n-------\nJust a placeholder for now, when we have more shared components they will probably live there.\n\ncloudinsight-agent\n--------\nInstalls the cloudinsight-agent on the target system, sets the LICENSE key, and start the service to report on the local system metrics\n\ncloudinsight-sdk\n-----------------------\nInstalls the language-specific libraries to interact with `onestatsd`. *Not completed yet*.\n\nother\n-----\nThere are many other integration-specific recipes, that are meant to assist in deploying the correct agent configuration files and dependencies for a given integration.\n\nUsage\n=====\n\n1. Add this cookbook to your chef server, either by installing with knife or by adding it to your Berksfile:\n\n    ```\n    cookbook 'cloudinsight-agent', '~> 0.1.0'\n    ```\n\n2. Add your LICENSE Key as a node attribute via an `environment` or `role` or by declaring it in another cookbook at a higher precedence level.\n3. Associate the recipes with the desired `roles`, i.e. \"role:example\" should start the agent with \"cloudinsight-agent::cloudinsight-agent\".  Here's an example role:\n    \n    ```\n    name 'example'\n    description 'Example role using cloudinsight-agent'\n    default_attributes(\n      'cloudinsight-agent' => {\n        'license_key' => 'license_key',\n      }\n    )\n    run_list %w(\n      recipe[cloudinsight-agent::cloudinsight-agent]\n    )\n    ```\n\n    And upload the role to the chef server, add your role to run_list.\n    \n    ```\n      'run_list': [ 'role[example]' ]\n    ```\n     \n    Or, you update the cloudinsight-agent specific attribute with your LICENSE key and upload the updated cookbook, then add cookbook to run_list:\n\n    ```\n      'run_list': [ 'recipe[cloudinsight-agent::cloudinsight-agent]'] \n    ```\n   \n4. Wait until `chef-client` runs on the target node (or trigger chef-client manually if you're impatient)\n\nAttribute\n=========\n\n- `license_key` - The Cloudinsight license key to associate your Agent's data with your organization.\n- `hostname` -  Default node hostname. Force the hostname to whatever you want if you want.\n- `tags` - Set the host's tags.\n- `log_level` - Default INFO.\n",
  "maintainer": "Cloudinsight",
  "maintainer_email": "support@oneapm.com",
  "license": "All rights reserved",
  "platforms": {
    "amazon": ">= 0.0.0",
    "centos": ">= 0.0.0",
    "debian": ">= 0.0.0",
    "fedora": ">= 0.0.0",
    "redhat": ">= 0.0.0",
    "scientific": ">= 0.0.0",
    "ubuntu": ">= 0.0.0"
  },
  "dependencies": {
    "apt": ">= 0.0.0",
    "chef_handler": "~> 1.1.0",
    "yum": ">= 0.0.0"
  },
  "recommendations": {

  },
  "suggestions": {
    "sudo": ">= 0.0.0"
  },
  "conflicting": {

  },
  "providing": {

  },
  "replacing": {

  },
  "attributes": {

  },
  "groupings": {

  },
  "recipes": {
    "cloudinsight-agent::default": "Default",
    "cloudinsight-agent::cloudinsight-agent": "Installs the cloudinsight-agent",
    "cloudinsight-agent::repository": "Installs the cloudinsight-agent package repository",
    "cloudinsight-agent::cassandra": "Installs and configures the Cassandra integration",
    "cloudinsight-agent::couchdb": "Installs and configures the CouchDB integration",
    "cloudinsight-agent::postfix": "Installs and configures the Postfix integration"
  },
  "version": "0.1.0",
  "source_url": "",
  "issues_url": "",
  "privacy": false,
  "chef_versions": [

  ],
  "ohai_versions": [

  ],
  "gems": [

  ]
}
