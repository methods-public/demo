# Specify at least one nameserver for the realm being tested against. If SUTs
# are to register dynamic DNS resource records under a subdomain other than the
# realm name, define an  optional dns_domain_name. All other realm information
# will be sourced from the solo data bag.
#
# Be sure SUTs can access DNS, LDAP, and Kerberos services.

<%
require 'json'
data_bag_file = 'test/fixtures/data_bags/realmd-sssd/realm.json'
data_bag = ::JSON.parse(File.read(data_bag_file))

# Recommended - at least one realm DNS server
realm_nameservers = [ ]
# Recommended - group for access testing, defaults to 'domain users'
auth_group_acl = [ ]
# Optional - IP addresses or CIDR blocks from which to allow SSH
auth_ip_acl = [ ]
# Optional - set to 'integration' for testing chef_vault_item_for_environment
chef_environment = nil
# Optional - set SPN for a DNS domain name other than the realm name
dns_domain_name = nil

realm_info = data_bag[chef_environment].nil? ?
  data_bag :
  data_bag[chef_environment]
%>
---
provisioner:
  <% unless chef_environment.nil? %>
  client_rb:
    environment: <%= chef_environment %>
  <% end %>
  data_bags_path: 'test/fixtures/data_bags'
  environments_path: 'test/fixtures/environments'

platforms:
  - name: centos-7.2
    driver_config:
      vm_hostname: 'sssd-centos7.<%= dns_domain_name || realm_info['realm'] %>'
  - name: debian-8.2
    driver_config:
      vm_hostname: 'sssd-debian8.<%= dns_domain_name || realm_info['realm'] %>'
  - name: fedora-22
    driver_config:
      vm_hostname: 'sssd-fc22.<%= dns_domain_name || realm_info['realm'] %>'
  - name: fedora-23
    driver_config:
      vm_hostname: 'sssd-fc23.<%= dns_domain_name || realm_info['realm'] %>'
  - name: ubuntu-14.04
    driver_config:
      vm_hostname: 'sssd-ubuntu14.<%= dns_domain_name || realm_info['realm'] %>'

suites:
  - name: join-realm
    run_list:
      - recipe[realmd-sssd-tester]
      <% unless realm_nameservers.to_s.empty? %>
      - recipe[resolver]
      <% end %>
      - recipe[realmd-sssd]
      - recipe[export_node]
    attributes:
      <% unless realm_nameservers.to_s.empty? %>
      resolver:
        nameservers: <%= realm_nameservers %>
        search: <%= realm_info['realm'] %>
      <% end %>
      realmd-sssd:
        join: 'true'
        extra-config:
          '[domain/<%= realm_info['realm'] %>]':
            access_provider: 'simple'
            simple_allow_groups: <%= auth_group_acl.empty? ? "domain users@#{realm_info['realm']}" : auth_group_acl %>
            realmd_tags: [ 'Test Kitchen system under test' ]
            fallback_homedir: '/home/%d/%u'
            ldap_sasl_mech: 'GSSAPI'
            ldap_user_extra_attrs: 'altSecurityIdentities:altSecurityIdentities'
            ldap_user_ssh_public_key: 'altSecurityIdentities'
        ldap-key-auth:
          cidr: <%= auth_ip_acl.push(['::1/128','10.0.2.2/32']).flatten! %>
          enable: true
