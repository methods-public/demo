#!/bin/sh
#
# Startup script for glassfish
#
### BEGIN INIT INFO
# Provides:                     glassfish-domain1
# Required-Start:                 
# Should-Start:                 
# Required-Stop:                  
# Default-Start:                2 3 4 5
# Default-Stop:                 0 1 6
# Short-Description:            start and stop glassfish-domain1
# Description:                  Start/Stop/Restart glassfish-domain1
### END INIT INFO

# Variables
#START_PROG=<%= "#{node.glassfish.base_dir}/scripts/glassfish-start.sh" %>
#STOP_PROG=<%= "#{node.glassfish.base_dir}/scripts/glassfish-stop.sh" %>
#RESTART_PROG=<%= "#{node.glassfish.base_dir}/scripts/glassfish-restart.sh" %>

RETVAL=0

start() {
su -c "<%= node.glassfish.base_dir %>/glassfish/bin/asadmin --user <%= node.hopsworks.admin.user %> --passwordfile <%= @password_file %> start-domain <%= @domain_name %>" <%= node.glassfish.user %> 
return $?

}

stop() {
su -c "<%= node.glassfish.base_dir %>/glassfish/bin/asadmin --user <%= node.hopsworks.admin.user %> --passwordfile <%= @password_file %> stop-domain <%= @domain_name %>" <%= node.glassfish.user %> 
res=$?
id=`ps -ef | grep ASMain` 
if [ "$id" != "" ] ; then
  ps -ef | awk '/ASMain/{print $2}' | xargs kill 2> /dev/null
  res=$?
fi
  return $res
}

restart() {
  echo "Restarting"
  stop
  start
  return $?
}

status() {  
  ID=<%= @node_id %>
  PID_FILE=<%= node.glassfish.base_dir %>/glassfish/domains/#{domain_name}/config/glassfish.pid
  if [ -f $PID_FILE ] ; then
     PID=`cat $PID_FILE`
     kill -0 $PID
     res=$?
  else 
     res=1
  fi
  if [ $res -eq 0 ] ; then
   echo "glassfish($PID) is running"
  else
   echo "glassfish is not running"
  fi
  return $res
}

# user-supplied parameter to stop/start/restart process.
case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    restart
    ;;
  reload)
    restart
    ;;
  status)
    status
    ;;
  -h|--help)
    echo ""
    echo "usage: <prog> start|stop|restart|status"
    echo ""
    exit 0
    ;;
  *)
    echo $"Usage: <prog> {start|stop|restart|status}"
    exit 1
  esac


exit $RETVAL
