{
  "name": "hekad",
  "description": "Installs/Configures heka",
  "long_description": "# hekad cookbook [![Build Status](https://travis-ci.org/nathwill/chef-hekad.svg?branch=master)](https://travis-ci.org/nathwill/chef-hekad)\n\nA [Chef][chef] cookbook for installing & configuring [Mozilla Heka][docs].\n\n## Recipes\n\n### hekad::default\n\nIncludes the install, configure, and service recipes.\n\n### hekad::install\n\nDownloads the configured release, and installs it.\n\n### hekad::configure\n\nCreates the configuration template directory, and installs the\n`heka_config[hekad]` resource, with hekas [global configuration][gc].\n\nSee attributes documentation about how to set global configuration.\n\n### hekad::service\n\nInstalls and configures a heka user, group, and service.\n\n## Attributes\n\nAttributes are namespaced under `default['heka']`.\n\n|Attribute|Description|Default Value|\n|---------|-----------|-------------|\n|config_dir|base path for configs|`/etc/heka/conf.d`|\n|config|default global configuration|`maxprocs: 2`|\n|package_url|url for release pkg|varies by platform|\n\n## Resources\n\n### heka_config\n\nBase Heka configuration resource, maps to a file under `/etc/heka.d/`,\nallows a free-form configuration hash under the config property.\n\n|Attribute|Description|Default Value|\n|---------|-----------|-------------|\n|path|config base for rendered file|`node['heka']['config_dir']`|\n|config|configuration hash|`{}`|\n\n#### Example\n\nA resource like:\n\n```ruby\nheka_config \"elasticsearch_output\" do\n  config(\n    type: \"ElasticSearchOutput\",\n    message_matcher: \"TRUE\",\n    can_exit: false,\n    encoder: \"elasticsearch_json_encoder\",\n    use_buffering: false,\n    buffering: {\n      max_file_size: 10_485_760, # 10MiB\n      max_buffer_size: 104_857_600, # 100MiB\n      full_action: \"block\"\n    },\n    server: \"http://1.2.3.4:9201\"\n  )\nend\n```\n\nwill render a config like:\n\n```toml\n[elasticsearch_output]\ncan_exit = false\nencoder = \"elasticsearch_json_encoder\"\nmessage_matcher = \"TRUE\"\nserver = \"http://1.2.3.4:9201\"\ntype = \"ElasticSearchOutput\"\nuse_buffering = false\n[elasticsearch_output.buffering]\nfull_action = \"block\"\nmax_buffer_size = 104857600\nmax_file_size = 10485760\n```\n\n### heka_global\n\nResource for global configuration section (i.e. the `[hekad]` block).\n\n|Attribute|Description|Default|\n|---------|-----------|-------|\n|path|config base for rendered file|`node['heka']['config_dir']`|\n|config|configuration hash|`{}`|\n|cpuprof|String. see docs|nil|\n|max_message_loops|Integer. see docs|nil|\n|max_process_inject|Integer. see docs|nil|\n|max_process_duration|Integer. see docs|nil|\n|max_timer_inject|Integer. see docs|nil|\n|max_pack_idle|String. see docs|nil|\n|maxprocs|Integer. see docs|nil|\n|memprof|String. see docs|nil|\n|poolsize|Integer. see docs|nil|\n|plugin_chansize|Integer. see docs|nil|\n|base_dir|String. see docs|nil|\n|share_dir|String. see docs|nil|\n|sample_denominator|Integer. see docs|nil|\n|pid_file|String. see docs|nil|\n|hostname|String. see docs|nil|\n|max_message_size|Integer. see docs|nil|\n|log_flags|Integer. see docs|nil|\n|full_buffer_max_retries|Integer. see docs|nil|\n\n#### Example\n\nA resource like:\n\n```ruby\nheka_global 'hekad' do\n  maxprocs 2\n  base_dir '/var/cache/hekad'\n  full_buffer_max_retries 5\nend\n```\n\nwill render a config like:\n\n```toml\n[hekad]\nbase_dir = \"/var/cache/hekad\"\nfull_buffer_max_retries = 5\nmaxprocs = 2\n```\n\n### heka_input\n\nResource for configuring input plugins\n\n|Attribute|Description|Default|\n|---------|-----------|-------|\n|path|config base for rendered file|`node['heka']['config_dir']`|\n|config|configuration hash|`{}`|\n|decoder|String. See docs.|nil|\n|synchronous_decode|[TrueClass, FalseClass]. See docs.|nil|\n|send_decode_failures|[TrueClass, FalseClass]. See docs.|nil|\n|can_exit|[TrueClass, FalseClass]. See docs.|nil|\n|splitter|String. See docs.|nil|\n|log_decode_failures|[TrueClass, FalseClass]. See docs.|nil|\n|script_type|String. See docs.|nil|\n|filename|String. See docs.|nil|\n|preserve_data|[TrueClass, FalseClass]. See docs.|nil|\n|memory_limit|Integer. See docs.|nil|\n|instruction_limit|Integer. See docs.|nil|\n|output_limit|Integer. See docs.|nil|\n|module_directory|String. See docs.|nil|\n|sandbox_config|Hash. See docs.|nil|\n|server_name|String. See docs.|nil|\n|cert_file|String. See docs.|nil|\n|key_file|String. See docs.|nil|\n|client_auth|String. See docs.|nil|\n|ciphers|Array. See docs.|nil|\n|insecure_skip_verify|[TrueClass, FalseClass]. See docs.|nil|\n|prefer_server_ciphers|[TrueClass, FalseClass]. See docs.|nil|\n|session_tickets_disabled|[TrueClass, FalseClass]. See docs.|nil|\n|session_ticket_key|String. See docs.|nil|\n|min_version|String. See docs.|nil|\n|max_version|String. See docs.|nil|\n|client_cafile|String. See docs.|nil|\n|root_cafile|String. See docs.|nil|\n|max_jitter|String. See docs.|nil|\n|max_delay|String. See docs.|nil|\n|delay|String. See docs.|nil|\n|max_retries|Integer. See docs.|nil|\n\n#### Example\n\nA resource like:\n\n```ruby\nheka_input 'load_avg_input' do\n  type 'FilePollingInput'\n  decoder 'load_avg_decoder'\n  config file_path: '/proc/loadavg', ticker_interval: 1\nend\n```\n\nwill render a config like:\n\n```toml\n[load_avg_input]\ndecoder = \"load_avg_decoder\"\nfile_path = \"/proc/loadavg\"\nticker_interval = 1\ntype = \"FilePollingInput\"\n```\n\n### heka_splitter\n\nResource for configuring splitter plugins.\n\n|Attribute|Description|Default|\n|---------|-----------|-------|\n|path|config base for rendered file|`node['heka']['config_dir']`|\n|config|configuration hash|`{}`|\n|keep_truncated|[TrueClass, FalseClass]. See docs.|nil|\n|use_message_bytes|[TrueClass, FalseClass]. See docs.|nil|\n|min_buffer_size|Integer. See docs.|nil|\n|deliver_incomplete_final|[TrueClass, FalseClass]. See docs.|nil|\n|max_jitter|String. See docs.|nil|\n|max_delay|String. See docs.|nil|\n|delay|String. See docs.|nil|\n|max_retries|Integer. See docs.|nil|\n\n#### Example\n\nA resource like:\n\n```ruby\nheka_splitter 'split_on_space' do\n  type 'TokenSplitter'\n  deliver_incomplete_final false\n  config delimiter: ' '\nend\n```\n\nwill render a config like:\n\n```toml\n[split_on_space]\ndelimiter = \" \"\ndeliver_incomplete_final = false\ntype = \"TokenSplitter\"\n```\n\n### heka_decoder\n\n|Attribute|Description|Default|\n|---------|-----------|-------|\n|path|config base for rendered file|`node['heka']['config_dir']`|\n|config|configuration hash|`{}`|\n|script_type|String. See docs.|nil|\n|filename|String. See docs.|nil|\n|preserve_data|[TrueClass, FalseClass]. See docs.|nil|\n|memory_limit|Integer. See docs.|nil|\n|instruction_limit|Integer. See docs.|nil|\n|output_limit|Integer. See docs.|nil|\n|module_directory|String. See docs.|nil|\n|sandbox_config|Hash. See docs.|nil|\n|max_jitter|String. See docs.|nil|\n|max_delay|String. See docs.|nil|\n|delay|String. See docs.|nil|\n|max_retries|Integer. See docs.|nil|\n\n#### Example\n\nA resource like:\n\n```ruby\nheka_decoder 'load_avg_decoder' do\n  type 'SandboxDecoder'\n  filename 'lua_decoders/linux_loadavg.lua'\n  sandbox_config payload_keep: false\nend\n```\n\nwill render a config like:\n\n```toml\n[load_avg_decoder]\nfilename = \"lua_decoders/linux_loadavg.lua\"\ntype = \"SandboxDecoder\"\n[load_avg_decoder.config]\npayload_keep = false\n```\n\n### heka_filter\n\n|Attribute|Description|Default|\n|---------|-----------|-------|\n|path|config base for rendered file|`node['heka']['config_dir']`|\n|config|configuration hash|`{}`|\n|message_matcher|String. See docs.|nil|\n|message_signer|String. See docs.|nil|\n|ticker_interval|Integer. See docs.|nil|\n|can_exit|[TrueClass, FalseClass]. See docs.|nil|\n|use_buffering|[TrueClass, FalseClass]. See docs.|nil|\n|max_file_size|Integer. See docs.|nil|\n|max_buffer_size|Integer. See docs.|nil|\n|full_action|String. See docs.|nil|\n|cursor_update_count|Integer. See docs.|nil|\n|script_type|String. See docs.|nil|\n|filename|String. See docs.|nil|\n|preserve_data|[TrueClass, FalseClass]. See docs.|nil|\n|memory_limit|Integer. See docs.|nil|\n|instruction_limit|Integer. See docs.|nil|\n|output_limit|Integer. See docs.|nil|\n|module_directory|String. See docs.|nil|\n|sandbox_config|Hash. See docs.|nil|\n|max_jitter|String. See docs.|nil|\n|max_delay|String. See docs.|nil|\n|delay|String. See docs.|nil|\n|max_retries|Integer. See docs.|nil|\n\n#### Example\n\nA resource like:\n\n```ruby\nheka_filter 'load_avg_filter' do\n  type 'SandboxFilter'\n  filename 'lua_filters/loadavg.lua'\n  ticker_interval 5\n  preserve_data true\n  message_matcher \"Type == 'stats.loadavg'\"\n  sandbox_config preservation_version: 1\n  use_buffering true\n  buffering_config do\n    max_file_size 1024 ** 2\n    max_buffer_size 1024 ** 3\n    full_action 'block'\n  end\nend\n```\n\nwill render a config like:\n\n```toml\n[load_avg_filter]\nfilename = \"lua_filters/loadavg.lua\"\nmessage_matcher = \"Type == 'stats.loadavg'\"\npreserve_data = true\nticker_interval = 5\ntype = \"SandboxFilter\"\nuse_buffering = true\n[load_avg_filter.buffering]\nfull_action = \"block\"\nmax_buffer_size = 1073741824\nmax_file_size = 1048576\n[load_avg_filter.config]\npreservation_version = 1\n```\n\n### heka_encoder\n\n|Attribute|Description|Default|\n|---------|-----------|-------|\n|path|config base for rendered file|`node['heka']['config_dir']`|\n|config|configuration hash|`{}`|\n|script_type|String. See docs.|nil|\n|filename|String. See docs.|nil|\n|preserve_data|[TrueClass, FalseClass]. See docs.|nil|\n|memory_limit|Integer. See docs.|nil|\n|instruction_limit|Integer. See docs.|nil|\n|output_limit|Integer. See docs.|nil|\n|module_directory|String. See docs.|nil|\n|sandbox_config|Hash. See docs.|nil|\n|max_jitter|String. See docs.|nil|\n|max_delay|String. See docs.|nil|\n|delay|String. See docs.|nil|\n|max_retries|Integer. See docs.|nil|\n\n#### Example\n\nA resource like:\n\n```ruby\nheka_encoder 'RstEncoder' { type 'RstEncoder' }\n```\n\nwill render a config like:\n\n```toml\n[RstEncoder]\n```\n\n### heka_output\n\n|Attribute|Description|Default|\n|---------|-----------|-------|\n|path|config base for rendered file|`node['heka']['config_dir']`|\n|config|configuration hash|`{}`|\n|message_matcher|String. See docs.|nil|\n|message_signer|String. See docs.|nil|\n|encoder|String. See docs.|nil|\n|use_framing|[TrueClass, FalseClass]. See docs.|nil|\n|can_exit|[TrueClass, FalseClass]. See docs.|nil|\n|use_buffering|[TrueClass, FalseClass]. See docs.|nil|\n|script_type|String. See docs.|nil|\n|filename|String. See docs.|nil|\n|preserve_data|[TrueClass, FalseClass]. See docs.|nil|\n|memory_limit|Integer. See docs.|nil|\n|instruction_limit|Integer. See docs.|nil|\n|output_limit|Integer. See docs.|nil|\n|module_directory|String. See docs.|nil|\n|sandbox_config|Hash. See docs.|nil|\n|max_file_size|Integer. See docs.|nil|\n|max_buffer_size|Integer. See docs.|nil|\n|full_action|String. See docs.|nil|\n|cursor_update_count|Integer. See docs.|nil|\n|server_name|String. See docs.|nil|\n|cert_file|String. See docs.|nil|\n|key_file|String. See docs.|nil|\n|client_auth|String. See docs.|nil|\n|ciphers|Array. See docs.|nil|\n|insecure_skip_verify|[TrueClass, FalseClass]. See docs.|nil|\n|prefer_server_ciphers|[TrueClass, FalseClass]. See docs.|nil|\n|session_tickets_disabled|[TrueClass, FalseClass]. See docs.|nil|\n|session_ticket_key|String. See docs.|nil|\n|min_version|String. See docs.|nil|\n|max_version|String. See docs.|nil|\n|client_cafile|String. See docs.|nil|\n|root_cafile|String. See docs.|nil|\n|max_jitter|String. See docs.|nil|\n|max_delay|String. See docs.|nil|\n|delay|String. See docs.|nil|\n|max_retries|Integer. See docs.|nil|\n\n#### Example\n\nA resource like:\n\n```ruby\nheka_output 'debug_output' do\n  type 'FileOutput'\n  message_matcher 'TRUE'\n  encoder 'RstEncoder'\n  config path: '/tmp/heka-debug.log'\n  use_buffering  true\n  buffering_config do\n    max_file_size 1024 ** 2\n    max_buffer_size 1024 ** 3\n    full_action 'block'\n  end\nend\n```\n\nwill render a config like:\n\n```toml\n[debug_output]\nencoder = \"RstEncoder\"\nmessage_matcher = \"TRUE\"\npath = \"/tmp/heka-debug.log\"\ntype = \"FileOutput\"\nuse_buffering = true\n[debug_output.buffering]\nfull_action = \"block\"\nmax_buffer_size = 1073741824\nmax_file_size = 1048576\n```\n\n--\n[chef]: https://www.chef.io/\n[docs]: http://hekad.readthedocs.org/\n[gc]: http://hekad.readthedocs.org/en/latest/config/index.html#global-configuration-options\n",
  "maintainer": "Nathan Williams",
  "maintainer_email": "nath.e.will@gmail.com",
  "license": "Apache-2.0",
  "platforms": {
    "mac_os_x": ">= 0.0.0",
    "ubuntu": ">= 0.0.0",
    "fedora": ">= 0.0.0",
    "redhat": ">= 0.0.0",
    "centos": ">= 0.0.0",
    "scientific": ">= 0.0.0"
  },
  "dependencies": {
    "homebrew": ">= 0.0.0"
  },
  "providing": {

  },
  "attributes": {

  },
  "recipes": {

  },
  "version": "6.1.0",
  "source_url": "https://github.com/nathwill/chef-hekad",
  "issues_url": "https://github.com/nathwill/chef-hekad/issues",
  "privacy": false,
  "chef_versions": [
    [
      ">= 12"
    ]
  ],
  "ohai_versions": [

  ],
  "gems": [
    [
      "toml"
    ]
  ]
}
